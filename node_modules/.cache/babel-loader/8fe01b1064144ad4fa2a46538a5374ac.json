{"remainingRequest":"D:\\品达通用权限系统\\资料\\前端工程\\pinda-authority-ui\\node_modules\\babel-loader\\lib\\index.js!D:\\品达通用权限系统\\资料\\前端工程\\pinda-authority-ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\品达通用权限系统\\资料\\前端工程\\pinda-authority-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\品达通用权限系统\\资料\\前端工程\\pinda-authority-ui\\src\\views\\pinda\\msgs\\sendMsgs\\Index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\品达通用权限系统\\资料\\前端工程\\pinda-authority-ui\\src\\views\\pinda\\msgs\\sendMsgs\\Index.vue","mtime":1585207882908},{"path":"D:\\品达通用权限系统\\资料\\前端工程\\pinda-authority-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\品达通用权限系统\\资料\\前端工程\\pinda-authority-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\品达通用权限系统\\资料\\前端工程\\pinda-authority-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\品达通用权限系统\\资料\\前端工程\\pinda-authority-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:\\\\\\u54C1\\u8FBE\\u901A\\u7528\\u6743\\u9650\\u7CFB\\u7EDF\\\\\\u8D44\\u6599\\\\\\u524D\\u7AEF\\u5DE5\\u7A0B\\\\pinda-authority-ui\\\\node_modules\\\\@babel\\\\runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es7.array.includes\");\n\nrequire(\"core-js/modules/es6.string.includes\");\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"D:\\\\\\u54C1\\u8FBE\\u901A\\u7528\\u6743\\u9650\\u7CFB\\u7EDF\\\\\\u8D44\\u6599\\\\\\u524D\\u7AEF\\u5DE5\\u7A0B\\\\pinda-authority-ui\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/toConsumableArray\"));\n\nvar _Msgs = _interopRequireDefault(require(\"@/api/Msgs.js\"));\n\nvar _Role = _interopRequireDefault(require(\"@/api/Role.js\"));\n\nvar _User = _interopRequireDefault(require(\"@/api/User.js\"));\n\nvar _Tinymce = _interopRequireDefault(require(\"@/components/Tinymce\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'MsgsEdit',\n  components: {\n    Tinymce: _Tinymce.default\n  },\n  filters: {},\n  props: {},\n  data: function data() {\n    var _this = this;\n\n    return {\n      allUserList: [],\n      allRoleList: [],\n      oldChooseUserIdList: [[]],\n      oldChooseRoleIdList: [[]],\n      dialog: {\n        isVisible: false\n      },\n      type: 'add',\n      msgsCenterInfo: this.initMsgsCenterInfo(),\n      disabled: false,\n      disabledReceiveType: false,\n      rules: {\n        'msgsCenterInfoDTO.title': [{\n          required: true,\n          message: this.$t('rules.require'),\n          trigger: 'blur'\n        }, {\n          min: 1,\n          max: 255,\n          message: '长度在 1 到 255 个字符',\n          trigger: 'blur'\n        }],\n        'msgsCenterInfoDTO.content': [{\n          required: true,\n          message: this.$t('rules.require'),\n          trigger: 'blur'\n        }, {\n          min: 1,\n          max: 65535,\n          message: '长度在 1 到 65535 个字符',\n          trigger: 'blur'\n        }],\n        'msgsCenterInfoDTO.msgsCenterType': {\n          required: true,\n          message: this.$t('rules.require'),\n          trigger: 'change'\n        },\n        roleCodeList: {\n          validator: function validator(rule, value, callback) {\n            if (_this.msgsCenterInfo.receiveType === 'role' && _this.msgsCenterInfo.msgsCenterInfoDTO.msgsCenterType.code !== 'PUBLICITY' && _this.msgsCenterInfo.roleCodeList.length <= 0) {\n              callback('请选择角色');\n            } else {\n              callback();\n            }\n          },\n          trigger: 'blur'\n        },\n        userIdList: {\n          validator: function validator(rule, value, callback) {\n            if (_this.msgsCenterInfo.receiveType === 'user' && _this.msgsCenterInfo.msgsCenterInfoDTO.msgsCenterType.code !== 'PUBLICITY' && _this.msgsCenterInfo.userIdList.length <= 0) {\n              callback('请选择用户');\n            } else {\n              callback();\n            }\n          },\n          trigger: 'blur'\n        },\n        'msgsCenterInfoDTO.handlerUrl': {\n          min: 1,\n          max: 255,\n          message: '长度在 1 到 255 个字符',\n          trigger: 'blur'\n        }\n      }\n    };\n  },\n  computed: {\n    enums: function enums() {\n      return this.$store.state.common.enums;\n    }\n  },\n  watch: {\n    $route: function $route() {\n      if (this.$route.path === '/msgs/sendMsgs') {\n        this.loadMsgs();\n        this.loadUserList();\n        this.loadRoleList();\n      }\n    }\n  },\n  mounted: function mounted() {\n    this.loadMsgs();\n    this.loadUserList();\n    this.loadRoleList();\n  },\n  methods: {\n    initMsgsCenterInfo: function initMsgsCenterInfo() {\n      return {\n        userIdList: [],\n        roleCodeList: [],\n        receiveType: 'user',\n        msgsCenterInfoDTO: {\n          id: '',\n          bizId: '',\n          bizType: {\n            code: ''\n          },\n          msgsCenterType: {\n            code: ''\n          },\n          title: '',\n          content: '',\n          author: '',\n          handlerUrl: '',\n          handlerParams: '',\n          isSingleHandle: true\n        }\n      };\n    },\n    loadMsgs: function loadMsgs() {\n      var _this2 = this;\n\n      var type = this.$route.query.type;\n      var id = this.$route.query.id;\n      this.type = type;\n\n      if (type === 'view') {\n        _Msgs.default.get(id).then(function (response) {\n          var res = response.data;\n\n          if (res.isSuccess) {\n            _this2.msgsCenterInfo.msgsCenterInfoDTO = res.data;\n\n            if (_this2.msgsCenterInfo.msgsCenterInfoDTO.bizType === null) {\n              _this2.msgsCenterInfo.msgsCenterInfoDTO.bizType = {\n                code: ''\n              };\n            }\n\n            if (_this2.msgsCenterInfo.msgsCenterInfoDTO.msgsCenterType === null) {\n              _this2.msgsCenterInfo.msgsCenterInfoDTO.msgsCenterType = {\n                code: ''\n              };\n            }\n          }\n        });\n      } else {\n        this.reset();\n      }\n    },\n    loadUserList: function loadUserList() {\n      var _this3 = this;\n\n      _User.default.page({\n        current: 1,\n        size: 10000\n      }).then(function (response) {\n        var res = response.data;\n\n        if (res.isSuccess) {\n          if (res.data.records.length > 0) {\n            _this3.allUserList = [{\n              id: '-1',\n              name: '全选'\n            }].concat((0, _toConsumableArray2.default)(res.data.records));\n          }\n        }\n      });\n    },\n    loadRoleList: function loadRoleList() {\n      var _this4 = this;\n\n      _Role.default.page({\n        current: 1,\n        size: 10000\n      }).then(function (response) {\n        var res = response.data;\n\n        if (res.isSuccess) {\n          if (res.data.records.length > 0) {\n            _this4.allRoleList = [{\n              code: '-1',\n              name: '全选'\n            }].concat((0, _toConsumableArray2.default)(res.data.records));\n          }\n        }\n      });\n    },\n    msgsCenterTypeChange: function msgsCenterTypeChange(select) {\n      if (select === 'PUBLICITY') {\n        this.disabledReceiveType = true;\n      } else {\n        this.disabledReceiveType = false;\n      }\n    },\n    userSelect: function userSelect(val) {\n      //保留所有值\n      var allValues = this.allUserList.map(function (item) {\n        return item.id;\n      }); // 用来储存上一次的值，可以进行对比\n\n      var oldVal = this.oldChooseUserIdList.length === 1 ? [] : this.oldChooseUserIdList[1]; // 若是全部选择\n\n      if (val.includes('-1')) {\n        this.msgsCenterInfo.userIdList = allValues;\n      } // 取消全部选中  上次有 当前没有 表示取消全选\n\n\n      if (oldVal.includes('-1') && !val.includes('-1')) {\n        this.msgsCenterInfo.userIdList = [];\n      } // 点击非全部选中  需要排除全部选中 以及 当前点击的选项\n      // 新老数据都有全部选中\n\n\n      if (oldVal.includes('-1') && val.includes('-1')) {\n        var index = val.indexOf('-1');\n        val.splice(index, 1); // 排除全选选项\n\n        this.msgsCenterInfo.userIdList = val;\n      } //全选未选 但是其他选项全部选上 则全选选上 上次和当前 都没有全选\n\n\n      if (!oldVal.includes('-1') && !val.includes('-1')) {\n        if (val.length === allValues.length - 1) {\n          this.msgsCenterInfo.userIdList = ['-1'].concat(val);\n        }\n      } //储存当前最后的结果 作为下次的老数据\n\n\n      this.oldChooseUserIdList[1] = this.msgsCenterInfo.userIdList;\n    },\n    roleSelect: function roleSelect(val) {\n      //保留所有值\n      var allValues = this.allRoleList.map(function (item) {\n        return item.code;\n      }); // 用来储存上一次的值，可以进行对比\n\n      var oldVal = this.oldChooseRoleIdList.length === 1 ? [] : this.oldChooseRoleIdList[1]; // 若是全部选择\n\n      if (val.includes('-1')) {\n        this.msgsCenterInfo.roleCodeList = allValues;\n      } // 取消全部选中  上次有 当前没有 表示取消全选\n\n\n      if (oldVal.includes('-1') && !val.includes('-1')) {\n        this.msgsCenterInfo.roleCodeList = [];\n      } // 点击非全部选中  需要排除全部选中 以及 当前点击的选项\n      // 新老数据都有全部选中\n\n\n      if (oldVal.includes('-1') && val.includes('-1')) {\n        var index = val.indexOf('-1');\n        val.splice(index, 1); // 排除全选选项\n\n        this.msgsCenterInfo.roleCodeList = val;\n      } //全选未选 但是其他选项全部选上 则全选选上 上次和当前 都没有全选\n\n\n      if (!oldVal.includes('-1') && !val.includes('-1')) {\n        if (val.length === allValues.length - 1) {\n          this.msgsCenterInfo.roleCodeList = ['-1'].concat(val);\n        }\n      } //储存当前最后的结果 作为下次的老数据\n\n\n      this.oldChooseRoleIdList[1] = this.msgsCenterInfo.roleCodeList;\n    },\n    reset: function reset() {\n      var _this5 = this;\n\n      // 先清除校验，再清除表单，不然有奇怪的bug\n      this.$refs.form.clearValidate();\n      this.$refs.form.resetFields();\n      this.msgsCenterInfo = this.initMsgsCenterInfo(); //这里报错\n      // this.$nextTick(() =>\n      //   this.$refs.content.setContent('')\n      // )\n      // 设置设置的时间短了 也报错\n\n      setTimeout(function () {\n        _this5.$refs.content.setContent('');\n      }, 1000);\n    },\n    submitForm: function submitForm(draft) {\n      var vm = this;\n      console.log(vm.msgsCenterInfo);\n      this.$refs.form.validate(function (valid) {\n        if (valid) {\n          vm.editSubmit(draft);\n        } else {\n          return false;\n        }\n      });\n    },\n    editSubmit: function editSubmit() {\n      var vm = this;\n\n      if (vm.type === 'edit') {\n        vm.update();\n      } else {\n        vm.save();\n      }\n    },\n    save: function save() {\n      var vm = this;\n      vm.disabled = true;\n\n      _Msgs.default.save(vm.msgsCenterInfo).then(function (response) {\n        vm.disabled = false;\n        var res = response.data;\n\n        if (res.isSuccess) {\n          vm.$message({\n            message: vm.$t('tips.createSuccess'),\n            type: 'success'\n          });\n          vm.reset();\n          vm.$router.push('/msgs/myMsgs');\n        }\n      });\n    },\n    update: function update() {\n      var vm = this;\n      vm.disabled = true;\n\n      _Msgs.default.update(vm.msgs).then(function (response) {\n        vm.disabled = false;\n        var res = response.data;\n\n        if (res.isSuccess) {\n          vm.$message({\n            message: vm.$t('tips.createSuccess'),\n            type: 'success'\n          });\n          vm.reset();\n          vm.$router.push('/msgs/myMsgs');\n        }\n      });\n    }\n  }\n};\nexports.default = _default;",null]}