{"remainingRequest":"D:\\projects\\beike\\pinda-authority-ui\\node_modules\\babel-loader\\lib\\index.js!D:\\projects\\beike\\pinda-authority-ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\projects\\beike\\pinda-authority-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\projects\\beike\\pinda-authority-ui\\src\\views\\pinda\\auth\\menu\\Index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\projects\\beike\\pinda-authority-ui\\src\\views\\pinda\\auth\\menu\\Index.vue","mtime":1585207882865},{"path":"D:\\projects\\beike\\pinda-authority-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\projects\\beike\\pinda-authority-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\projects\\beike\\pinda-authority-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\projects\\beike\\pinda-authority-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:\\\\projects\\\\beike\\\\pinda-authority-ui\\\\node_modules\\\\@babel\\\\runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.function.name\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"D:\\\\projects\\\\beike\\\\pinda-authority-ui\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/objectSpread2\"));\n\nrequire(\"core-js/modules/es6.string.starts-with\");\n\nrequire(\"core-js/modules/es6.array.find-index\");\n\nrequire(\"core-js/modules/es6.string.ends-with\");\n\nvar _CommonTree = _interopRequireDefault(require(\"@/components/pinda/CommonTree.vue\"));\n\nvar _Icons = _interopRequireDefault(require(\"./Icons\"));\n\nvar _Edit = _interopRequireDefault(require(\"./Edit\"));\n\nvar _Pagination = _interopRequireDefault(require(\"@/components/Pagination\"));\n\nvar _Menu = _interopRequireDefault(require(\"@/api/Menu.js\"));\n\nvar _Resource = _interopRequireDefault(require(\"@/api/Resource.js\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'MenuManage',\n  components: {\n    Icons: _Icons.default,\n    commonTree: _CommonTree.default,\n    Pagination: _Pagination.default,\n    ResourceEdit: _Edit.default\n  },\n  data: function data() {\n    var _this = this;\n\n    return {\n      dialog: {\n        isVisible: false,\n        type: 'add'\n      },\n      iconVisible: false,\n      menuTree: [],\n      name: '',\n      menu: this.initMenu(),\n      resourceQueryParams: {\n        menuId: null\n      },\n      resourceTableKey: 0,\n      resourceSort: {},\n      resourceLoading: false,\n      resourceSelection: [],\n      resourceTableData: {\n        total: 0\n      },\n      resourcePagination: {\n        size: 10,\n        current: 1\n      },\n      rules: {\n        name: [{\n          required: true,\n          message: this.$t('rules.require'),\n          trigger: 'blur'\n        }, {\n          min: 1,\n          max: 255,\n          message: this.$t('rules.range2to10'),\n          trigger: 'blur'\n        }],\n        path: [{\n          max: 255,\n          message: this.$t('rules.noMoreThan100'),\n          trigger: 'blur'\n        }, {\n          required: true,\n          message: this.$t('rules.require'),\n          trigger: 'blur'\n        }, {\n          validator: function validator(rule, value, callback) {\n            var isUrl = _this.isUrl(_this.menu.path);\n\n            if (value === '/' || !isUrl && value.endsWith('/')) {\n              callback('请填写有效的路由地址');\n            } else {\n              callback();\n            }\n          },\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  computed: {\n    menuComponent: function menuComponent() {\n      var comp = '';\n\n      if (this.menu.path && this.menu.path !== '/') {\n        var isUrl = this.isUrl(this.menu.path);\n\n        if (isUrl) {\n          comp = \"\\u8DF3\\u8F6C\\u5730\\u5740\\uFF1A\".concat(this.menu.path);\n        } else {\n          comp = \"\\u524D\\u7AEF\\u7EC4\\u4EF6\\uFF1Apinda\".concat(this.menu.path, \"/Index.vue\");\n        }\n      } else {\n        comp = \"\\u524D\\u7AEF\\u7EC4\\u4EF6\\uFF1Apinda/Index.vue\";\n      }\n\n      return comp;\n    }\n  },\n  watch: {\n    'menu.path': function menuPath() {\n      this.computedComponent();\n    }\n  },\n  mounted: function mounted() {\n    this.initMenuTree();\n  },\n  methods: {\n    isUrl: function isUrl(path) {\n      var urls = ['http://', '/http://', 'https://', '/https://', 'www.', '/www.'];\n      var urlIndex = urls.findIndex(function (item) {\n        return path.startsWith(item);\n      });\n      return urlIndex >= 0;\n    },\n    menuPath: function menuPath() {\n      var isUrl = this.isUrl(this.menu.path);\n\n      if (!isUrl && !this.menu.path.startsWith('/')) {\n        this.menu.path = '/' + this.menu.path;\n      } else if (isUrl) {\n        if (this.menu.path.startsWith('/')) {\n          this.menu.path = this.menu.path.substr(1);\n        }\n      }\n    },\n    computedComponent: function computedComponent() {\n      var isUrl = this.isUrl(this.menu.path);\n\n      if (isUrl) {\n        this.menu.component = 'Layout';\n      } else {\n        if (this.menu.path) {\n          this.menu.component = \"pinda\".concat(this.menu.path, \"/Index\");\n        } else {\n          this.menu.component = \"pinda/Index\";\n        }\n      }\n    },\n    initMenuTree: function initMenuTree() {\n      var _this2 = this;\n\n      _Menu.default.allTree().then(function (response) {\n        var res = response.data;\n        _this2.menuTree = res.data;\n      });\n    },\n    initMenu: function initMenu() {\n      return {\n        id: '',\n        name: '',\n        describe: '',\n        code: '',\n        isPublic: false,\n        path: '',\n        component: '',\n        isEnable: true,\n        sortValue: '',\n        parentId: 0,\n        icon: '',\n        group: ''\n      };\n    },\n    exportExcel: function exportExcel() {\n      this.$message({\n        message: '带完善',\n        type: 'success'\n      });\n    },\n    nodeClick: function nodeClick(data) {\n      this.menu = (0, _objectSpread2.default)({}, data);\n      this.menu.name = this.menu.label;\n      this.$refs.form.clearValidate();\n      this.resourceQueryParams.menuId = data.id;\n      this.resourceSearch();\n    },\n    handleNumChange: function handleNumChange(val) {\n      this.menu.sortValue = val;\n    },\n    chooseIcons: function chooseIcons() {\n      this.iconVisible = true;\n    },\n    chooseIcon: function chooseIcon(icon) {\n      this.menu.icon = icon;\n      this.iconVisible = false;\n    },\n    submit: function submit() {\n      var _this3 = this;\n\n      this.$refs.form.validate(function (valid) {\n        if (valid) {\n          _this3.menu.createTime = _this3.menu.updateTime = null;\n\n          if (_this3.menu.id) {\n            _this3.update();\n          } else {\n            _this3.save();\n          }\n        } else {\n          return false;\n        }\n      });\n    },\n    save: function save() {\n      var _this4 = this;\n\n      console.log(this.menu.component);\n\n      _Menu.default.save(this.menu).then(function (response) {\n        var res = response.data;\n\n        if (res.isSuccess) {\n          _this4.$message({\n            message: _this4.$t('tips.createSuccess'),\n            type: 'success'\n          });\n        }\n\n        _this4.reset();\n      });\n    },\n    update: function update() {\n      var _this5 = this;\n\n      console.log(this.menu);\n\n      _Menu.default.update(this.menu).then(function (response) {\n        var res = response.data;\n\n        if (res.isSuccess) {\n          _this5.$message({\n            message: _this5.$t('tips.updateSuccess'),\n            type: 'success'\n          });\n        }\n\n        _this5.reset();\n      });\n    },\n    reset: function reset() {\n      this.initMenuTree();\n      this.name = '';\n      this.resetForm();\n    },\n    search: function search() {\n      this.$refs.menuTree.$refs.treeRef.filter(this.name);\n    },\n    add: function add() {\n      this.resetForm();\n      var checked = this.$refs.menuTree.$refs.treeRef.getCheckedKeys();\n\n      if (checked.length > 1) {\n        this.$message({\n          message: this.$t('tips.onlyChooseOne'),\n          type: 'warning'\n        });\n      } else if (checked.length > 0) {\n        this.menu.parentId = checked[0];\n      } else {\n        this.menu.parentId = 0;\n      }\n\n      this.resourceQueryParams.menuId = null;\n      this.resourceReset();\n    },\n    deleteMenu: function deleteMenu() {\n      var _this6 = this;\n\n      var checked = this.$refs.menuTree.$refs.treeRef.getCheckedKeys();\n\n      if (checked.length === 0) {\n        this.$message({\n          message: this.$t('tips.noNodeSelected'),\n          type: 'warning'\n        });\n      } else {\n        this.$confirm(this.$t('tips.confirmDeleteNode'), this.$t('common.tips'), {\n          confirmButtonText: this.$t('common.confirm'),\n          cancelButtonText: this.$t('common.cancel'),\n          type: 'warning'\n        }).then(function () {\n          _Menu.default.delete({\n            ids: checked\n          }).then(function (response) {\n            var res = response.data;\n\n            if (res.isSuccess) {\n              _this6.$message({\n                message: _this6.$t('tips.deleteSuccess'),\n                type: 'success'\n              });\n            }\n\n            _this6.reset();\n\n            _this6.resourceQueryParams.menuId = null;\n\n            _this6.resourceReset();\n          });\n        }).catch(function () {\n          _this6.$refs.menuTree.$refs.treeRef.setCheckedKeys([]);\n        });\n      }\n    },\n    resetForm: function resetForm() {\n      this.$refs.form.clearValidate();\n      this.$refs.form.resetFields();\n      this.menu = this.initMenu();\n    },\n    resourceAdd: function resourceAdd() {\n      this.dialog.type = 'add';\n      this.dialog.isVisible = true;\n      this.$refs.resourceEdit.setResource({\n        menuId: this.menu.id\n      });\n    },\n    resourceEdit: function resourceEdit(row) {\n      this.dialog.type = 'edit';\n      this.dialog.isVisible = true;\n      row.menuId = this.menu.id;\n      this.$refs.resourceEdit.setResource(row);\n    },\n    resourceSingleDelete: function resourceSingleDelete(row) {\n      this.$refs.resourceTable.toggleRowSelection(row, true);\n      this.resourceBatchDelete();\n    },\n    resourceBatchDelete: function resourceBatchDelete() {\n      var _this7 = this;\n\n      if (!this.resourceSelection.length) {\n        this.$message({\n          message: this.$t('tips.noDataSelected'),\n          type: 'warning'\n        });\n        return;\n      }\n\n      this.$confirm(this.$t('tips.confirmDeleteNode'), this.$t('common.tips'), {\n        confirmButtonText: this.$t('common.confirm'),\n        cancelButtonText: this.$t('common.cancel'),\n        type: 'warning'\n      }).then(function () {\n        var ids = _this7.resourceSelection.map(function (item) {\n          return item.id;\n        });\n\n        _Resource.default.delete({\n          ids: ids\n        }).then(function (response) {\n          var res = response.data;\n\n          if (res.isSuccess) {\n            _this7.$message({\n              message: _this7.$t('tips.deleteSuccess'),\n              type: 'success'\n            });\n          }\n\n          _this7.resourceReset();\n        });\n      });\n    },\n    resourceReset: function resourceReset() {\n      this.resourceQueryParams = {\n        menuId: this.resourceQueryParams.menuId\n      };\n      this.resourceSort = {};\n      this.$refs.resourceTable.clearSort();\n      this.$refs.resourceTable.clearFilter();\n      this.resourceSearch();\n    },\n    resourceSearch: function resourceSearch() {\n      this.resourceFetch((0, _objectSpread2.default)({}, this.resourceQueryParams, {}, this.resourceSort));\n    },\n    resourceFetch: function resourceFetch() {\n      var _this8 = this;\n\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      params.size = this.resourcePagination.size;\n      params.current = this.resourcePagination.current;\n      params = (0, _objectSpread2.default)({}, this.resourceQueryParams, {}, params);\n\n      if (params.menuId) {\n        this.resourceLoading = true;\n\n        _Resource.default.page(params).then(function (response) {\n          var res = response.data;\n          _this8.resourceTableData = res.data;\n          _this8.resourceLoading = false;\n        });\n      } else {\n        this.resourceTableData = {};\n      }\n    },\n    resourceSortChange: function resourceSortChange(val) {\n      this.resourceSort.field = val.prop;\n      this.resourceSort.order = val.order;\n      this.resourceSearch();\n    },\n    onResourceSelectChange: function onResourceSelectChange(selection) {\n      this.resourceSelection = selection;\n    },\n    resourceEditClose: function resourceEditClose() {\n      this.dialog.isVisible = false;\n    },\n    resourceEditSuccess: function resourceEditSuccess() {\n      this.resourceSearch();\n    }\n  }\n};\nexports.default = _default;",null]}