{"remainingRequest":"D:\\projects\\beike\\pinda-authority-ui\\node_modules\\babel-loader\\lib\\index.js!D:\\projects\\beike\\pinda-authority-ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\projects\\beike\\pinda-authority-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\projects\\beike\\pinda-authority-ui\\src\\views\\profile\\components\\UserCard.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\projects\\beike\\pinda-authority-ui\\src\\views\\profile\\components\\UserCard.vue","mtime":1585207882936},{"path":"D:\\projects\\beike\\pinda-authority-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\projects\\beike\\pinda-authority-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\projects\\beike\\pinda-authority-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\projects\\beike\\pinda-authority-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:\\\\projects\\\\beike\\\\pinda-authority-ui\\\\node_modules\\\\@babel\\\\runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.string.starts-with\");\n\nvar _PanThumb = _interopRequireDefault(require(\"@/components/PanThumb\"));\n\nvar _Avatar = _interopRequireDefault(require(\"./Avatar\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default2 = {\n  components: {\n    PanThumb: _PanThumb.default,\n    Avatar: _Avatar.default\n  },\n  props: {\n    user: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    }\n  },\n  data: function data() {\n    return {\n      dialogVisible: false,\n      socialLoginUrl: \"\".concat(process.env.VUE_APP_BASE_API, \"/authority/social/login\"),\n      logo: [{\n        img: 'gitee.png',\n        name: 'gitee',\n        bind: false,\n        radius: true\n      }, {\n        img: 'github.png',\n        name: 'github',\n        bind: false,\n        radius: true\n      }, {\n        img: 'tencent_cloud.png',\n        name: 'tencent_cloud',\n        bind: false,\n        radius: true\n      }, {\n        img: 'qq.png',\n        name: 'qq',\n        bind: false,\n        radius: false\n      }, {\n        img: 'dingtalk.png',\n        name: 'dingtalk',\n        bind: false,\n        radius: true\n      }, {\n        img: 'microsoft.png',\n        name: 'microsoft',\n        bind: false,\n        radius: false\n      }],\n      oauthType: '',\n      page: {\n        width: window.screen.width * 0.5,\n        height: window.screen.height * 0.5\n      }\n    };\n  },\n  computed: {\n    avatar: function avatar() {\n      if (!this.user['avatar']) {\n        return require(\"@/assets/avatar/default.jpg\");\n      } else {\n        if (this.user['avatar'].startsWith('http://') || this.user['avatar'].startsWith('https://')) {\n          return this.user['avatar'];\n        } else {\n          return require(\"@/assets/avatar/\".concat(this.user.avatar));\n        }\n      }\n    }\n  },\n  mounted: function mounted() {// this.findUserConnections()\n  },\n  destroyed: function destroyed() {\n    window.removeEventListener('message', this.resolveBindResult);\n  },\n  methods: {\n    openAvatar: function openAvatar() {\n      this.dialogVisible = true;\n      debugger;\n      this.$refs.myAvatar.init();\n    },\n    changeSuccess: function changeSuccess(avatar) {\n      this.dialogVisible = false;\n      this.$message({\n        message: this.$t('tips.updateSuccess'),\n        type: 'success'\n      });\n      this.user.avatar = avatar;\n      this.$store.commit('account/setUser', this.user);\n    },\n    resolveLogo: function resolveLogo(logo) {\n      return require(\"@/assets/logo/\".concat(logo));\n    },\n    findUserConnections: function findUserConnections() {\n      var _this = this;\n\n      this.$get(\"auth/social/connections/\".concat(this.user.username)).then(function (r) {\n        var data = r.data.data;\n        data.forEach(function (d) {\n          _this.logo.forEach(function (l) {\n            if (l.name === d.providerName.toLowerCase()) {\n              l.bind = true;\n            }\n          });\n        });\n      });\n    },\n    bind: function bind(name) {\n      this.$message({\n        message: '待完善',\n        type: 'warning'\n      });\n      console.log(name);\n      this.oauthType = name; // const url = `${this.socialLoginUrl}/${name}/bind`\n      // window.open(url, 'newWindow', `height=${this.page.height}, width=${this.page.width}, top=10%, left=10%, toolbar=no, menubar=no, scrollbars=no, resizable=no,location=no, status=no`)\n      // window.addEventListener('message', this.resolveBindResult, false)\n    },\n    resolveBindResult: function resolveBindResult(e) {\n      var data = e.data.data;\n      data.token = null; // this.$post('auth/social/bind', {\n      //   ...data,\n      //   bindUsername: this.user.username\n      // }).then((r) => {\n      //   this.logo.forEach(l => {\n      //     if (l.name === this.oauthType) {\n      //       l.bind = true\n      //     }\n      //   })\n      //   this.$message({\n      //     message: this.$t('common.bindSuccess'),\n      //     type: 'success'\n      //   })\n      // })\n    },\n    unbind: function unbind(name) {\n      var _this2 = this;\n\n      this.$confirm(this.$t('common.confirmUnbind'), this.$t('common.tips'), {\n        confirmButtonText: this.$t('common.confirm'),\n        cancelButtonText: this.$t('common.cancel'),\n        type: 'warning'\n      }).then(function () {\n        _this2.$delete('auth/social/unbind', {\n          bindUsername: _this2.user.username,\n          oauthType: name\n        }).then(function () {\n          _this2.logo.forEach(function (l) {\n            if (l.name === name) {\n              l.bind = false;\n            }\n          });\n\n          _this2.$message({\n            message: _this2.$t('common.unbindSuccess'),\n            type: 'success'\n          });\n        });\n      }).catch(function () {});\n    }\n  }\n};\nexports.default = _default2;",null]}