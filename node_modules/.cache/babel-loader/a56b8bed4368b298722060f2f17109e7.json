{"remainingRequest":"D:\\projects\\beike\\pinda-authority-ui\\node_modules\\babel-loader\\lib\\index.js!D:\\projects\\beike\\pinda-authority-ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\projects\\beike\\pinda-authority-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\projects\\beike\\pinda-authority-ui\\src\\views\\pinda\\auth\\role\\Edit.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\projects\\beike\\pinda-authority-ui\\src\\views\\pinda\\auth\\role\\Edit.vue","mtime":1585210576946},{"path":"D:\\projects\\beike\\pinda-authority-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\projects\\beike\\pinda-authority-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\projects\\beike\\pinda-authority-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\projects\\beike\\pinda-authority-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:\\\\projects\\\\beike\\\\pinda-authority-ui\\\\node_modules\\\\@babel\\\\runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _objectSpread2 = _interopRequireDefault(require(\"D:\\\\projects\\\\beike\\\\pinda-authority-ui\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/objectSpread2\"));\n\nvar _Role = _interopRequireDefault(require(\"@/api/Role.js\"));\n\nvar _Org = _interopRequireDefault(require(\"@/api/Org.js\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'RoleEdit',\n  components: {},\n  props: {\n    dialogVisible: {\n      type: Boolean,\n      default: false\n    },\n    type: {\n      type: String,\n      default: 'add'\n    }\n  },\n  data: function data() {\n    var _this = this;\n\n    return {\n      role: this.initRole(),\n      screenWidth: 0,\n      width: this.initWidth(),\n      orgList: [],\n      orgHidden: true,\n      rules: {\n        name: [{\n          required: true,\n          message: this.$t('rules.require'),\n          trigger: 'blur'\n        }, {\n          min: 1,\n          max: 255,\n          message: this.$t('rules.range4to10'),\n          trigger: 'blur'\n        }, {\n          validator: function validator(rule, value, callback) {\n            if (!_this.type === 'add' && value.trim().length > 0) {\n              _Role.default.check(value).then(function (response) {\n                var res = response.data;\n\n                if (res.data) {\n                  callback('编码重复');\n                } else {\n                  callback();\n                }\n              });\n            } else {\n              callback();\n            }\n\n            callback();\n          },\n          trigger: 'blur'\n        }],\n        status: {\n          required: true,\n          message: this.$t('rules.require'),\n          trigger: 'blur'\n        },\n        orgList: {\n          validator: function validator(rule, value, callback) {\n            if (_this.role.dsType.code === 'CUSTOMIZE') {\n              if (_this.$refs.orgTree.getCheckedKeys().length > 0) {\n                callback();\n              } else {\n                callback('请至少选择一个单位或部门');\n              }\n            } else {\n              callback();\n            }\n          }\n        }\n      }\n    };\n  },\n  computed: {\n    isVisible: {\n      get: function get() {\n        return this.dialogVisible;\n      },\n      set: function set() {\n        this.close();\n        this.reset();\n      }\n    },\n    title: function title() {\n      return this.type === 'add' ? this.$t('common.add') : this.$t('common.edit');\n    },\n    enums: function enums() {\n      return this.$store.state.common.enums;\n    }\n  },\n  watch: {},\n  mounted: function mounted() {\n    var _this2 = this;\n\n    this.initOrg();\n\n    window.onresize = function () {\n      return function () {\n        _this2.width = _this2.initWidth();\n      }();\n    };\n  },\n  methods: {\n    initRole: function initRole() {\n      return {\n        id: '',\n        code: '',\n        name: '',\n        orgList: [],\n        status: true,\n        describe: '',\n        dsType: {\n          code: 'ALL',\n          desc: ''\n        }\n      };\n    },\n    initWidth: function initWidth() {\n      this.screenWidth = document.body.clientWidth;\n\n      if (this.screenWidth < 991) {\n        return '90%';\n      } else if (this.screenWidth < 1400) {\n        return '45%';\n      } else {\n        return '800px';\n      }\n    },\n    initOrg: function initOrg() {\n      var _this3 = this;\n\n      _Org.default.allTree({\n        status: true\n      }).then(function (response) {\n        var res = response.data;\n        _this3.orgList = res.data;\n      });\n    },\n    loadListOptions: function loadListOptions(_ref) {\n      var callback = _ref.callback;\n      callback();\n    },\n    setRole: function setRole(val) {\n      var _this4 = this;\n\n      var vm = this;\n\n      if (val) {\n        vm.role = (0, _objectSpread2.default)({}, val); //this.orgHidden = val.dsType.code !== 'CUSTOMIZE'\n\n        this.orgHidden = false;\n\n        if (!this.orgHidden) {\n          _Role.default.get(val.id).then(function (response) {\n            var res = response.data;\n\n            if (res.isSuccess) {\n              _this4.role.orgList = res.data.orgList;\n\n              _this4.$refs.orgTree.setCheckedKeys(res.data.orgList);\n            }\n          });\n        }\n      }\n    },\n    close: function close() {\n      this.$emit('close');\n    },\n    reset: function reset() {\n      // 先清除校验，再清除表单，不然有奇怪的bug\n      this.$refs.form.clearValidate();\n      this.$refs.form.resetFields();\n      this.role = this.initRole();\n      this.orgHidden = true;\n      this.$refs.orgTree.setCheckedKeys([]);\n    },\n    submitForm: function submitForm() {\n      var vm = this;\n      this.$refs.form.validate(function (valid) {\n        if (valid) {\n          vm.editSubmit();\n        } else {\n          return false;\n        }\n      });\n    },\n    editSubmit: function editSubmit() {\n      var vm = this;\n\n      if (this.orgHidden && this.role.orgList) {\n        this.role.orgList.length = 0;\n      } else {\n        this.role.orgList = this.$refs.orgTree.getCheckedKeys();\n      }\n\n      if (vm.type === 'add') {\n        vm.save();\n      } else {\n        vm.update();\n      }\n    },\n    save: function save() {\n      var vm = this;\n\n      _Role.default.save(this.role).then(function (response) {\n        var res = response.data;\n\n        if (res.isSuccess) {\n          vm.isVisible = false;\n          vm.$message({\n            message: vm.$t('tips.createSuccess'),\n            type: 'success'\n          });\n          vm.$emit('success');\n        }\n      });\n    },\n    update: function update() {\n      var _this5 = this;\n\n      _Role.default.update(this.role).then(function (response) {\n        var res = response.data;\n\n        if (res.isSuccess) {\n          _this5.isVisible = false;\n\n          _this5.$message({\n            message: _this5.$t('tips.updateSuccess'),\n            type: 'success'\n          });\n\n          _this5.$emit('success');\n        }\n      });\n    },\n    dsTypeChange: function dsTypeChange(value) {\n      this.orgHidden = value !== 'CUSTOMIZE';\n    }\n  }\n};\nexports.default = _default;",null]}