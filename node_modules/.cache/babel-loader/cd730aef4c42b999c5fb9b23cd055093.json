{"remainingRequest":"D:\\品达通用权限系统\\资料\\前端工程\\pinda-authority-ui\\node_modules\\babel-loader\\lib\\index.js!D:\\品达通用权限系统\\资料\\前端工程\\pinda-authority-ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\品达通用权限系统\\资料\\前端工程\\pinda-authority-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\品达通用权限系统\\资料\\前端工程\\pinda-authority-ui\\src\\views\\pinda\\msgs\\myMsgs\\Index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\品达通用权限系统\\资料\\前端工程\\pinda-authority-ui\\src\\views\\pinda\\msgs\\myMsgs\\Index.vue","mtime":1585207882906},{"path":"D:\\品达通用权限系统\\资料\\前端工程\\pinda-authority-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\品达通用权限系统\\资料\\前端工程\\pinda-authority-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\品达通用权限系统\\资料\\前端工程\\pinda-authority-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\品达通用权限系统\\资料\\前端工程\\pinda-authority-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:\\\\\\u54C1\\u8FBE\\u901A\\u7528\\u6743\\u9650\\u7CFB\\u7EDF\\\\\\u8D44\\u6599\\\\\\u524D\\u7AEF\\u5DE5\\u7A0B\\\\pinda-authority-ui\\\\node_modules\\\\@babel\\\\runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.regexp.search\");\n\nrequire(\"core-js/modules/es6.array.sort\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"D:\\\\\\u54C1\\u8FBE\\u901A\\u7528\\u6743\\u9650\\u7CFB\\u7EDF\\\\\\u8D44\\u6599\\\\\\u524D\\u7AEF\\u5DE5\\u7A0B\\\\pinda-authority-ui\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/objectSpread2\"));\n\nvar _Pagination = _interopRequireDefault(require(\"@/components/Pagination\"));\n\nvar _Msgs = _interopRequireDefault(require(\"@/api/Msgs.js\"));\n\nvar _utils = require(\"@/utils/utils\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'MsgsList',\n  components: {\n    Pagination: _Pagination.default\n  },\n  filters: {\n    statusFilter: function statusFilter(status) {\n      var map = {\n        WAITING: 'danger',\n        SUCCESS: 'success',\n        FAIL: 'error'\n      };\n      return map[status] || 'success';\n    }\n  },\n  data: function data() {\n    return {\n      dialog: {\n        isVisible: false,\n        type: 'add'\n      },\n      tableKey: 0,\n      queryParams: {},\n      sort: {},\n      selection: [],\n      // 以下已修改\n      loading: false,\n      tableData: {\n        total: 0\n      },\n      pagination: {\n        size: 10,\n        current: 1\n      }\n    };\n  },\n  computed: {\n    msgsCenterTypeFilters: function msgsCenterTypeFilters() {\n      return (0, _utils.converEnum)(this.$store.state.common.enums.MsgsCenterType);\n    },\n    bizTypeFilters: function bizTypeFilters() {\n      return (0, _utils.converEnum)(this.$store.state.common.enums.MsgsBizType);\n    }\n  },\n  watch: {\n    $route: function $route() {\n      this.fetch();\n    }\n  },\n  mounted: function mounted() {\n    this.fetch();\n  },\n  methods: {\n    filterStatus: function filterStatus(value, row) {\n      return row.status === value;\n    },\n    onSelectChange: function onSelectChange(selection) {\n      this.selection = selection;\n    },\n    search: function search() {\n      this.fetch((0, _objectSpread2.default)({}, this.queryParams, {}, this.sort));\n    },\n    reset: function reset() {\n      this.queryParams = {};\n      this.sort = {};\n      this.$refs.table.clearSort();\n      this.$refs.table.clearFilter();\n      this.search();\n    },\n    exportExcel: function exportExcel() {\n      this.$message({\n        message: '待完善',\n        type: 'warning'\n      });\n    },\n    singleDelete: function singleDelete(row) {\n      this.$refs.table.toggleRowSelection(row, true);\n      this.batchDelete();\n    },\n    batchDelete: function batchDelete() {\n      var _this = this;\n\n      if (!this.selection.length) {\n        this.$message({\n          message: this.$t('tips.noDataSelected'),\n          type: 'warning'\n        });\n        return;\n      }\n\n      this.$confirm(this.$t('tips.confirmDelete'), this.$t('common.tips'), {\n        confirmButtonText: this.$t('common.confirm'),\n        cancelButtonText: this.$t('common.cancel'),\n        type: 'warning'\n      }).then(function () {\n        var ids = [];\n\n        _this.selection.forEach(function (u) {\n          ids.push(u.id);\n        });\n\n        _this.delete(ids);\n      }).catch(function () {\n        _this.clearSelections();\n      });\n    },\n    clearSelections: function clearSelections() {\n      this.$refs.table.clearSelection();\n    },\n    delete: function _delete(ids) {\n      var _this2 = this;\n\n      _Msgs.default.delete({\n        ids: ids\n      }).then(function (response) {\n        var res = response.data;\n\n        if (res.isSuccess) {\n          _this2.$message({\n            message: _this2.$t('tips.deleteSuccess'),\n            type: 'success'\n          });\n        }\n\n        _this2.search();\n      });\n    },\n    batchMark: function batchMark() {\n      var _this3 = this;\n\n      if (!this.selection.length) {\n        this.$message({\n          message: this.$t('tips.noDataSelected'),\n          type: 'warning'\n        });\n        return;\n      }\n\n      this.$confirm('确认全部标记为已读吗？', this.$t('common.tips'), {\n        confirmButtonText: this.$t('common.confirm'),\n        cancelButtonText: this.$t('common.cancel'),\n        type: 'warning'\n      }).then(function () {\n        var ids = [];\n\n        _this3.selection.forEach(function (u) {\n          ids.push(u.id);\n        });\n\n        _this3.mark(ids);\n      }).catch(function () {\n        _this3.clearSelections();\n      });\n    },\n    mark: function mark(ids, callback) {\n      _Msgs.default.mark({\n        msgCenterIds: ids\n      }).then(function (response) {\n        // eslint-disable-next-line no-unused-vars\n        var res = response.data;\n\n        if (typeof callback === 'function') {\n          callback(ids);\n        }\n      });\n    },\n    view: function view(row) {\n      var _this4 = this;\n\n      if (row.isRead) {\n        this.$router.push({\n          path: '/msgs/sendMsgs',\n          query: {\n            id: row.id,\n            type: 'view'\n          }\n        });\n      } else {\n        // eslint-disable-next-line no-unused-vars\n        this.mark([row.id], function (ids) {\n          _this4.$router.push({\n            path: '/msgs/sendMsgs',\n            query: {\n              id: row.id,\n              type: 'view'\n            }\n          });\n        });\n      }\n    },\n    edit: function edit(row) {\n      this.$router.push({\n        path: '/msgs/sendMsgs',\n        query: {\n          id: row.id,\n          type: 'edit'\n        }\n      });\n    },\n    fetch: function fetch() {\n      var _this5 = this;\n\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      this.loading = true;\n      params.size = this.pagination.size;\n      params.current = this.pagination.current;\n\n      if (this.queryParams.timeRange) {\n        params.startCreateTime = this.queryParams.timeRange[0];\n        params.endCreateTime = this.queryParams.timeRange[1];\n      }\n\n      _Msgs.default.page(params).then(function (response) {\n        var res = response.data;\n        _this5.loading = false;\n\n        if (res.isError) {\n          return;\n        }\n\n        _this5.tableData = res.data;\n      });\n    },\n    sortChange: function sortChange(val) {\n      this.sort.field = val.prop;\n      this.sort.order = val.order;\n      this.search();\n    },\n    filterChange: function filterChange(filters) {\n      for (var key in filters) {\n        this.queryParams[key] = filters[key][0];\n      }\n\n      this.search();\n    }\n  }\n};\nexports.default = _default;",null]}