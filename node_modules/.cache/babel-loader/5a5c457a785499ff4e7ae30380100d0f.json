{"remainingRequest":"D:\\品达通用权限系统\\资料\\前端工程\\pinda-authority-ui\\node_modules\\babel-loader\\lib\\index.js!D:\\品达通用权限系统\\资料\\前端工程\\pinda-authority-ui\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\品达通用权限系统\\资料\\前端工程\\pinda-authority-ui\\src\\lang\\en.js","dependencies":[{"path":"D:\\品达通用权限系统\\资料\\前端工程\\pinda-authority-ui\\src\\lang\\en.js","mtime":1585207882734},{"path":"D:\\品达通用权限系统\\资料\\前端工程\\pinda-authority-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\品达通用权限系统\\资料\\前端工程\\pinda-authority-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\品达通用权限系统\\资料\\前端工程\\pinda-authority-ui\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = {\n  route: {\n    dashboard: 'Dashboard',\n    profile: 'Profile'\n  },\n  navbar: {\n    setting: 'Settings',\n    github: 'Repository',\n    logOut: 'Log Out',\n    profile: 'Profile',\n    theme: 'Theme',\n    docs: 'Document',\n    size: 'Global Size',\n    deleteCache: 'DeleteCache'\n  },\n  login: {\n    title: 'Pinda Authority',\n    logIn: 'Login',\n    tenant: 'tenant',\n    username: 'Username',\n    password: 'Password',\n    code: 'Code',\n    ortherLoginType: 'Orther login type',\n    chooseToSignIn: 'Sign in with the following account: ',\n    type: {\n      up: 'Account Password',\n      social: 'Third Party Account'\n    }\n  },\n  documentation: {\n    documentation: 'Documentation',\n    github: 'Github Repository'\n  },\n  table: {\n    tenant: {\n      code: 'EnterpriseCode',\n      name: 'EnterpriseName',\n      type: 'Type',\n      status: 'Status',\n      duty: 'Duty',\n      expirationTime: 'ExpirationTime',\n      logo: 'Logo',\n      describe: 'Describe',\n      passwordExpire: 'PasswordExpire',\n      isMultipleLogin: 'IsCanMultipleLogin',\n      passwordErrorNum: 'PasswordErrorNum',\n      passwordErrorLockTime: 'PasswordErrorLockTime'\n    },\n    user: {\n      account: 'Account',\n      name: 'Name',\n      password: 'Password',\n      orgId: 'Org',\n      stationId: 'Station',\n      email: 'Email',\n      sex: 'Gender',\n      status: 'Status',\n      mobile: 'Mobile',\n      avatar: 'Avatar',\n      workDescribe: 'WorkDescribe',\n      passwordErrorLastTime: 'PasswordErrorLastTime',\n      passwordErrorNum: 'PasswordErrorNum',\n      passwordExpireTime: 'PasswordExpireTime',\n      lastLoginTime: 'LastLoginTime',\n      createTime: 'CreateTime',\n      updateTime: 'ModifyTime',\n      oldPassword: 'Old Password',\n      newPassword: 'New Password',\n      confirmPassword: 'Confirm Again',\n      social: 'Third Party Account'\n    },\n    role: {\n      code: 'Code',\n      name: 'Name',\n      describe: 'Describe',\n      status: 'Status',\n      readonly: 'Readonly',\n      createTime: 'CreateTime',\n      dsType: 'DsType',\n      orgList: 'Org'\n    },\n    menu: {\n      id: 'ID',\n      name: 'Name',\n      describe: 'Describe',\n      code: 'Permissions',\n      isPublic: 'IsPublic',\n      path: 'Router Uri',\n      type: 'Type',\n      component: 'Component',\n      isEnable: 'IsEnable',\n      sortValue: 'Order',\n      parentId: 'ParentId',\n      icon: 'Icon',\n      group: 'Group'\n    },\n    resource: {\n      code: 'Code',\n      name: 'Name',\n      describe: 'Describe'\n    },\n    org: {\n      name: 'Name',\n      abbreviation: 'Abbreviation',\n      describe: 'Describe',\n      parentId: 'ParentId',\n      sortValue: 'SortValue',\n      status: 'Status'\n    },\n    station: {\n      name: 'Name',\n      describe: 'Describe',\n      orgId: 'Org',\n      status: 'Status'\n    },\n    optLog: {\n      requestIp: 'IP',\n      type: 'type',\n      userName: 'userName',\n      description: 'description',\n      classPath: 'classPath',\n      actionMethod: 'actionMethod',\n      requestUri: 'requestUri',\n      httpMethod: 'httpMethod',\n      params: 'params',\n      result: 'result',\n      exDesc: 'exDesc',\n      consumingTime: 'consumingTime',\n      startTime: 'startTime',\n      finishTime: 'finishTime',\n      ua: 'ua'\n    },\n    loginLog: {\n      userName: 'userName',\n      account: 'account',\n      requestIp: 'IP',\n      description: 'description',\n      loginDate: 'loginDate',\n      ua: 'ua',\n      browser: 'browser',\n      browserVersion: 'browserVersion',\n      operatingSystem: 'operatingSystem',\n      location: 'location'\n    },\n    attachment: {\n      bizId: 'bizId',\n      bizType: 'bizType',\n      dataType: 'dataType',\n      submittedFileName: 'submittedFileName',\n      group: 'group',\n      path: 'path',\n      relativePath: 'relativePath',\n      url: 'url',\n      fileMd5: 'fileMd5',\n      contextType: 'contextType',\n      filename: 'filename',\n      ext: 'ext',\n      size: 'size',\n      orgId: 'orgId',\n      icon: 'icon'\n    },\n    smsTemplate: {\n      providerType: 'providerType',\n      appId: 'appId',\n      appSecret: 'appSecret',\n      url: 'url',\n      customCode: 'customCode',\n      name: 'name',\n      content: 'content',\n      templateParams: 'templateParams',\n      templateCode: 'templateCode',\n      signName: 'signName',\n      templateDescribe: 'templateDescribe'\n    },\n    smsTask: {\n      templateId: 'templateId',\n      status: 'status',\n      sourceType: 'sourceType',\n      receiver: 'receiver',\n      topic: 'topic',\n      templateParams: 'templateParams',\n      sendTime: 'sendTime',\n      content: 'content',\n      draft: 'isDraft'\n    },\n    smsSendStatus: {\n      taskId: 'task',\n      sendStatus: 'sendStatus',\n      receiver: 'receiver',\n      bizId: 'bizId',\n      ext: 'ext',\n      code: 'code',\n      message: 'message',\n      fee: 'fee'\n    },\n    msgs: {\n      bizType: 'bizType',\n      bizId: 'bizId',\n      msgsCenterType: 'msgsCenterType',\n      title: 'title',\n      content: 'content',\n      author: 'author',\n      handlerUrl: 'handlerUrl',\n      handlerParams: 'handlerParams',\n      isSingleHandle: 'isSingleHandle',\n      isDelete: 'isDelete',\n      isRead: 'isRead',\n      readTime: 'readTime'\n    },\n    systemApi: {\n      code: \"code\",\n      name: \"name\",\n      describe: \"describe\",\n      requestMethod: \"requestMethod\",\n      contentType: \"contentType\",\n      serviceId: \"serviceId\",\n      path: \"path\",\n      status: \"status\",\n      isPersist: \"isPersist\",\n      isAuth: \"isAuth\",\n      isOpen: \"isOpen\",\n      className: \"className\",\n      methodName: \"methodName\"\n    },\n    application: {\n      appKey: \"appKey\",\n      appSecret: \"appSecret\",\n      website: \"website\",\n      name: \"name\",\n      icon: \"icon\",\n      appType: \"appType\",\n      describe: \"describe\",\n      status: \"status\"\n    },\n    dictionary: {\n      code: \"code\",\n      name: \"name\",\n      describe: \"describe\",\n      status: \"status\"\n    },\n    dictionaryItem: {\n      dictionaryId: \"dictionaryId\",\n      dictionaryCode: \"dictionaryCode\",\n      code: \"code\",\n      name: \"name\",\n      describe: \"describe\",\n      status: \"status\",\n      sortValue: \"sortValue\"\n    },\n    gen: {\n      config: {\n        author: 'Author',\n        basePackage: 'Base Package',\n        entityPackage: 'Entity Package',\n        mapperPackage: 'Mapper Package',\n        mapperXmlPackage: 'Mapper Xml Package',\n        servicePackage: 'Service Package',\n        serviceImplPackage: 'ServiceImpl Package',\n        controllerPackage: 'Controller Package',\n        isTrim: 'Trim Prefix',\n        trimValue: 'Trim Value'\n      },\n      generate: {\n        tableName: 'TableName',\n        remark: 'Remark',\n        dataRows: 'DataRows',\n        createTime: 'CreateTime',\n        updateTime: 'UpdateTime'\n      }\n    },\n    eximport: {\n      field1: 'Field 1',\n      field2: 'Field 2',\n      field3: 'Field 3',\n      createTime: 'Import Time'\n    },\n    status: 'Status',\n    refresh: 'Refresh',\n    operation: 'Operation',\n    search: 'Search',\n    reset: 'Reset',\n    more: 'More',\n    add: 'Add',\n    export: 'Export',\n    import: 'Import',\n    upload: 'Upload',\n    download: 'Download',\n    templateDownload: 'Template Download',\n    delete: 'Delete',\n    resetPassword: 'RestPassword',\n    openInNewPage: 'New Page',\n    createTime: 'createTime',\n    updateTime: 'updateTime'\n  },\n  tagsView: {\n    refresh: 'Refresh',\n    close: 'Close',\n    closeOthers: 'Close Others',\n    closeAll: 'Close All'\n  },\n  settings: {\n    title: 'Page style setting',\n    theme: 'Theme Color',\n    tagsView: 'Open Tags-View',\n    fixedHeader: 'Fixed Header',\n    sidebarLogo: 'Sidebar Logo'\n  },\n  system: {\n    title: 'Pinda Authority System'\n  },\n  tips: {\n    systemError: 'System maintenance, please try again~',\n    usernameShouldNotBeEmpty: 'Username can not be empty',\n    passwordShouldNotBeEmpty: 'Password can not be empty',\n    switchLanguageSuccess: 'Switch language successfully',\n    loginSuccess: 'Login successful',\n    loginFail: 'Login failed',\n    defaultPassword: 'The user\\'s default password is 123456',\n    getDataFail: 'Failed to get data',\n    createSuccess: 'Create successfully',\n    updateSuccess: 'Update successfully',\n    deleteSuccess: 'Delete successfully',\n    noDataSelected: 'No data selected yet',\n    confirmDelete: 'The selected data will be permanently deleted, continue?',\n    confirmDeleteCache: 'Whether to clear the user permission cache immediately?',\n    containCurrentUser: 'The operation has been canceled because it contains the currently logged in user',\n    neverLogin: 'Never logged in to the pinda system',\n    nothing: 'Nothing',\n    topId: 'A value of 0 indicates a top-level node',\n    choose: 'Select: ',\n    chooseNothing: 'No icons have been selected yet',\n    onlyChooseOne: 'Only one node can be selected as the parent node',\n    noNodeSelected: 'Please select a node first',\n    confirmDeleteNode: 'The selected node and its child nodes will be permanently deleted. Continue?',\n    iframeGrant: 'Userame: pinda Password: pinda',\n    notEqual: 'Inconsistent values entered twice',\n    oldPasswordIncorrect: 'Old password incorrect',\n    uploadSuccess: 'Upload Successfully',\n    uploadFailed: 'Upload failed',\n    onlySupportXlsx: 'Only supports Xlsx type files',\n    updating: 'Updating',\n    updateFailed: 'Update failed',\n    noPermission: 'No permission',\n    confirmRestPassword: 'Make sure to reset the selected user password?',\n    resetPasswordSuccess: 'The selected user password reset has been reset to 123456',\n    getCodeImageFailed: 'Failed to get image verification code',\n    tooManyRequest: 'Getting the authentication code is too frequent. Please try again in 1 minute',\n    clientOriginSecret: 'The original password of the client is: '\n  },\n  rules: {\n    require: 'Can\\'t be empty',\n    range0to255: '0 to 255 characters in length',\n    range2to10: '2 to 10 characters in length',\n    range3to10: '3 to 10 characters in length',\n    range3to20: '3 to 20 characters in length',\n    range4to10: '4 to 10 characters in length',\n    range6to20: '6 to 20 characters in length',\n    email: 'Email is invalid',\n    mobile: 'Phone number is invalid',\n    usernameExist: 'The username already exists',\n    clientIdExist: 'The clientId already exists',\n    roleNameExist: 'The role name already exists',\n    noMoreThan10: 'Can\\'t exceed 10 characters in length',\n    noMoreThan11: 'Can\\'t exceed 11 characters in length',\n    noMoreThan20: 'Can\\'t exceed 20 characters in length',\n    noMoreThan50: 'Can\\'t exceed 50 characters in length',\n    noMoreThan100: 'Can\\'t exceed 100 characters in length',\n    invalidInteger: 'Please enter an integer greater than zero',\n    invalidURL: 'URL is invalid'\n  },\n  common: {\n    system: 'Microservice SaaS System',\n    desc: {\n      a: 'Based on Spring Boot 2.1.2 & Spring Cloud Greenwich.RELEASE',\n      b: 'Use Jwt Unified Authentication',\n      c: 'Enterprise design and configuration, deny demo project',\n      d: 'Front-end separation architecture for increased efficiency',\n      e: 'Integrate multiple monitoring to escort microservices',\n      f: 'Provide detailed documentation and teach you how to build it'\n    },\n    view: 'Detail',\n    tips: 'Tips',\n    clear: 'Clear',\n    confirm: 'Confirm',\n    cancel: 'Cancel',\n    add: 'Create',\n    edit: 'Modify',\n    upload: 'Upload',\n    username: 'User Name',\n    dept: 'Department',\n    createTime: 'Create Time',\n    yes: 'Yes',\n    no: 'No',\n    sex: {\n      male: 'Male',\n      female: 'Female',\n      secret: 'Secret'\n    },\n    status: {\n      valid: 'Valid',\n      invalid: 'Invalid'\n    },\n    menu: {\n      menu: 'Menu',\n      button: 'Button'\n    },\n    tab: {\n      common: 'Common',\n      directivity: 'Directivity',\n      solid: 'Solid',\n      food: 'Food'\n    },\n    aboutMe: 'About Me',\n    changeAvatar: 'Change',\n    lastLoginTime: 'Last login time',\n    goodMorning: 'Good morning',\n    goodAfternoon: 'Good afternoon',\n    goodEvening: 'Good evening',\n    randomMessage: {\n      0: '帮我帮我帮我帮我帮我帮我帮我',\n      1: 'Have a coffee break☕',\n      2: 'Do you want to play LOL with your friends?',\n      3: 'How many bugs🐞 did you write today?',\n      4: 'Have you chatted in the group today?',\n      5: 'What delicious food did you eat today?',\n      6: 'Have you smiled today?😊',\n      7: 'Have you solved the problem for others today?',\n      8: 'What are you going to eat?',\n      9: 'Do you want to watch movies on weekends?'\n    },\n    docDetails: 'Learn more',\n    allProject: 'All Projects',\n    noDept: 'No department',\n    noRole: 'No role',\n    noEmail: 'No Email',\n    noMobile: 'No Mobile',\n    noWorkDescribe: \"This guy's lazy.He didn't leave anything.\",\n    firstLogin: 'First login',\n    todayIp: 'Today IP',\n    todayVisit: 'Today visits',\n    TotalVisit: 'Total visits',\n    you: 'You',\n    total: 'Total',\n    visitTitle: 'Nearly ten days of system access records',\n    timeline: 'Timeline',\n    account: 'Account',\n    password: 'Password',\n    importResult: 'Import Result',\n    hthz: 'Hou Tian Hanzi',\n    al: 'Ali Style',\n    lm: 'Lian Meng',\n    ctc: 'Click to select',\n    pleaseInputUrl: 'Please enter a URL',\n    bind: 'Bind',\n    unbind: 'Unbind',\n    confirmUnbind: 'Make sure to unbind the third-party account?',\n    unbindSuccess: 'Unbind successfully',\n    bindSuccess: 'Bind successfully',\n    bindLogin: 'Bind & Login',\n    signLogin: 'Sign & Login',\n    current: 'Current ',\n    socialAccount: ' account ',\n    socialTips: ' haven\\'t bound any system accounts yet, you can bind system accounts or register a new account and bind.'\n  }\n};\nexports.default = _default;",null]}