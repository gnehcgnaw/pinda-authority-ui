{"remainingRequest":"D:\\品达通用权限系统\\资料\\前端工程\\pinda-authority-ui\\node_modules\\babel-loader\\lib\\index.js!D:\\品达通用权限系统\\资料\\前端工程\\pinda-authority-ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\品达通用权限系统\\资料\\前端工程\\pinda-authority-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\品达通用权限系统\\资料\\前端工程\\pinda-authority-ui\\src\\views\\pinda\\user\\user\\Index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\品达通用权限系统\\资料\\前端工程\\pinda-authority-ui\\src\\views\\pinda\\user\\user\\Index.vue","mtime":1585207882926},{"path":"D:\\品达通用权限系统\\资料\\前端工程\\pinda-authority-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\品达通用权限系统\\资料\\前端工程\\pinda-authority-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\品达通用权限系统\\资料\\前端工程\\pinda-authority-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\品达通用权限系统\\资料\\前端工程\\pinda-authority-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:\\\\\\u54C1\\u8FBE\\u901A\\u7528\\u6743\\u9650\\u7CFB\\u7EDF\\\\\\u8D44\\u6599\\\\\\u524D\\u7AEF\\u5DE5\\u7A0B\\\\pinda-authority-ui\\\\node_modules\\\\@babel\\\\runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.sort\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"D:\\\\\\u54C1\\u8FBE\\u901A\\u7528\\u6743\\u9650\\u7CFB\\u7EDF\\\\\\u8D44\\u6599\\\\\\u524D\\u7AEF\\u5DE5\\u7A0B\\\\pinda-authority-ui\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/objectSpread2\"));\n\nrequire(\"core-js/modules/es6.regexp.search\");\n\nrequire(\"core-js/modules/es6.string.starts-with\");\n\nvar _Pagination = _interopRequireDefault(require(\"@/components/Pagination\"));\n\nvar _vueTreeselect = _interopRequireDefault(require(\"@riophae/vue-treeselect\"));\n\nrequire(\"@riophae/vue-treeselect/dist/vue-treeselect.css\");\n\nvar _Edit = _interopRequireDefault(require(\"./Edit\"));\n\nvar _View = _interopRequireDefault(require(\"./View\"));\n\nvar _User = _interopRequireDefault(require(\"@/api/User.js\"));\n\nvar _Org = _interopRequireDefault(require(\"@/api/Org.js\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'UserManage',\n  components: {\n    Pagination: _Pagination.default,\n    UserEdit: _Edit.default,\n    UserView: _View.default,\n    Treeselect: _vueTreeselect.default\n  },\n  filters: {\n    userAvatarFilter: function userAvatarFilter(name) {\n      return name.charAt(0);\n    },\n    sexFilter: function sexFilter(status) {\n      var map = {\n        W: 'success',\n        M: 'danger',\n        N: 'info'\n      };\n      return map[status] || 'info';\n    },\n    statusFilter: function statusFilter(status) {\n      var map = {\n        false: 'danger',\n        true: 'success'\n      };\n      return map[status] || 'success';\n    }\n  },\n  data: function data() {\n    return {\n      orgList: [],\n      dialog: {\n        isVisible: false,\n        type: 'add'\n      },\n      userViewVisible: false,\n      tableKey: 0,\n      queryParams: {},\n      sort: {},\n      selection: [],\n      // 以下已修改\n      loading: false,\n      tableData: {\n        total: 0\n      },\n      pagination: {\n        size: 10,\n        current: 1\n      }\n    };\n  },\n  computed: {\n    currentUser: function currentUser() {\n      return this.$store.state.account.user;\n    }\n  },\n  watch: {\n    $route: function $route() {\n      if (this.$route.path === '/user/user') {\n        this.initOrg();\n      }\n    }\n  },\n  mounted: function mounted() {\n    console.log('init mounted');\n    this.fetch();\n    this.initOrg();\n  },\n  methods: {\n    initOrg: function initOrg() {\n      var _this = this;\n\n      _Org.default.allTree({\n        status: true\n      }).then(function (response) {\n        var res = response.data;\n        _this.orgList = res.data;\n      });\n    },\n    myAvatar: function myAvatar(avatar) {\n      if (!avatar) {\n        return require(\"@/assets/avatar/default.jpg\");\n      } else {\n        if (avatar.startsWith('http://') || avatar.startsWith('https://')) {\n          return avatar;\n        } else {\n          return require(\"@/assets/avatar/\".concat(avatar));\n        }\n      }\n    },\n    filterStatus: function filterStatus(value, row) {\n      return row.status === value;\n    },\n    viewClose: function viewClose() {\n      this.userViewVisible = false;\n    },\n    editClose: function editClose() {\n      this.dialog.isVisible = false;\n    },\n    editSuccess: function editSuccess() {\n      this.search();\n    },\n    onSelectChange: function onSelectChange(selection) {\n      this.selection = selection;\n    },\n    loadListOptions: function loadListOptions(_ref) {\n      var callback = _ref.callback;\n      callback();\n    },\n    search: function search() {\n      this.fetch((0, _objectSpread2.default)({}, this.queryParams, {}, this.sort));\n    },\n    reset: function reset() {\n      this.queryParams = {};\n      this.sort = {};\n      this.$refs.table.clearSort();\n      this.$refs.table.clearFilter();\n      this.search();\n    },\n    exportExcel: function exportExcel() {\n      this.$message({\n        message: '待完善',\n        type: 'warning'\n      });\n    },\n    resetPassword: function resetPassword() {\n      var _this2 = this;\n\n      if (!this.selection.length) {\n        this.$message({\n          message: this.$t('tips.noDataSelected'),\n          type: 'warning'\n        });\n        return;\n      }\n\n      this.$confirm(this.$t('tips.confirmRestPassword'), this.$t('common.tips'), {\n        confirmButtonText: this.$t('common.confirm'),\n        cancelButtonText: this.$t('common.cancel'),\n        type: 'warning'\n      }).then(function () {\n        var ids = [];\n\n        _this2.selection.forEach(function (u) {\n          ids.push(u.id);\n        });\n\n        _User.default.reset({\n          ids: ids\n        }).then(function (response) {\n          var res = response.data;\n\n          if (res.isSuccess) {\n            _this2.$message({\n              message: _this2.$t('tips.resetPasswordSuccess'),\n              type: 'success'\n            });\n          }\n\n          _this2.clearSelections();\n        });\n      }).catch(function () {\n        _this2.clearSelections();\n      });\n    },\n    singleDelete: function singleDelete(row) {\n      this.$refs.table.toggleRowSelection(row, true);\n      this.batchDelete();\n    },\n    batchDelete: function batchDelete() {\n      var _this3 = this;\n\n      if (!this.selection.length) {\n        this.$message({\n          message: this.$t('tips.noDataSelected'),\n          type: 'warning'\n        });\n        return;\n      }\n\n      var contain = false;\n      this.$confirm(this.$t('tips.confirmDelete'), this.$t('common.tips'), {\n        confirmButtonText: this.$t('common.confirm'),\n        cancelButtonText: this.$t('common.cancel'),\n        type: 'warning'\n      }).then(function () {\n        var ids = [];\n\n        _this3.selection.forEach(function (u) {\n          if (u.id === _this3.currentUser.id) {\n            contain = true;\n            return;\n          }\n\n          ids.push(u.id);\n        });\n\n        if (contain) {\n          _this3.$message({\n            message: _this3.$t('tips.containCurrentUser'),\n            type: 'warning'\n          });\n\n          _this3.clearSelections();\n        } else {\n          _this3.delete(ids);\n        }\n      }).catch(function () {\n        _this3.clearSelections();\n      });\n    },\n    clearSelections: function clearSelections() {\n      this.$refs.table.clearSelection();\n    },\n    delete: function _delete(ids) {\n      var _this4 = this;\n\n      _User.default.delete({\n        ids: ids\n      }).then(function (response) {\n        var res = response.data;\n\n        if (res.isSuccess) {\n          _this4.$message({\n            message: _this4.$t('tips.deleteSuccess'),\n            type: 'success'\n          });\n        }\n\n        _this4.search();\n      });\n    },\n    add: function add() {\n      this.dialog.type = 'add';\n      this.dialog.isVisible = true;\n      this.$refs.edit.setUser(false, this.orgList);\n    },\n    view: function view(row) {\n      this.$refs.view.setUser(row, this.orgList);\n      this.userViewVisible = true;\n    },\n    edit: function edit(row) {\n      this.$refs.edit.setUser(row, this.orgList);\n      this.dialog.type = 'edit';\n      this.dialog.isVisible = true;\n    },\n    fetch: function fetch() {\n      var _this5 = this;\n\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      this.loading = true;\n      params.size = this.pagination.size;\n      params.current = this.pagination.current;\n\n      if (this.queryParams.timeRange) {\n        params.startCreateTime = this.queryParams.timeRange[0];\n        params.endCreateTime = this.queryParams.timeRange[1];\n      }\n\n      _User.default.page(params).then(function (response) {\n        var res = response.data;\n        _this5.loading = false;\n\n        if (res.isSuccess) {\n          _this5.tableData = res.data;\n        }\n      });\n    },\n    sortChange: function sortChange(val) {\n      this.sort.field = val.prop;\n      this.sort.order = val.order;\n      this.search();\n    }\n  }\n};\nexports.default = _default;",null]}