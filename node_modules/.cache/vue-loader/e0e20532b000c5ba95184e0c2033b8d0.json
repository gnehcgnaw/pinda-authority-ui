{"remainingRequest":"D:\\projects\\beike\\pinda-authority-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\projects\\beike\\pinda-authority-ui\\src\\views\\febs\\system\\dept\\Index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\projects\\beike\\pinda-authority-ui\\src\\views\\febs\\system\\dept\\Index.vue","mtime":1585207882839},{"path":"D:\\projects\\beike\\pinda-authority-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\projects\\beike\\pinda-authority-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\projects\\beike\\pinda-authority-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\projects\\beike\\pinda-authority-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nexport default {\r\n  name: 'DeptManager',\r\n  data() {\r\n    return {\r\n      deptName: '',\r\n      deptTree: [],\r\n      dept: this.initDept(),\r\n      rules: {\r\n        deptName: [\r\n          { required: true, message: this.$t('rules.require'), trigger: 'blur' },\r\n          { min: 3, max: 10, message: this.$t('rules.range3to10'), trigger: 'blur' }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.initDeptTree()\r\n  },\r\n  methods: {\r\n    initDept() {\r\n      return {\r\n        deptId: '',\r\n        deptName: '',\r\n        parentId: 0,\r\n        orderNum: 0\r\n      }\r\n    },\r\n    initDeptTree() {\r\n      this.$get('system/dept').then((r) => {\r\n        this.deptTree = r.data.data.rows\r\n      })\r\n    },\r\n    exportExcel() {\r\n      this.$download('system/dept/excel', {\r\n        deptName: this.deptName\r\n      }, `dept_${new Date().getTime()}.xlsx`)\r\n    },\r\n    handleNumChange(val) {\r\n      this.dept.orderNum = val\r\n    },\r\n    filterNode(value, data) {\r\n      if (!value) return true\r\n      return data.label.indexOf(value) !== -1\r\n    },\r\n    nodeClick(data) {\r\n      this.dept = { ...data }\r\n      this.dept.deptName = this.dept.label\r\n      this.dept.deptId = this.dept.id\r\n      this.$refs.form.clearValidate()\r\n    },\r\n    add() {\r\n      this.resetForm()\r\n      const checked = this.$refs.deptTree.getCheckedKeys()\r\n      if (checked.length > 1) {\r\n        this.$message({\r\n          message: this.$t('tips.onlyChooseOne'),\r\n          type: 'warning'\r\n        })\r\n      } else if (checked.length > 0) {\r\n        this.dept.parentId = checked[0]\r\n      } else {\r\n        this.dept.parentId = 0\r\n      }\r\n    },\r\n    deleteDept() {\r\n      const checked = this.$refs.deptTree.getCheckedKeys()\r\n      if (checked.length === 0) {\r\n        this.$message({\r\n          message: this.$t('tips.noNodeSelected'),\r\n          type: 'warning'\r\n        })\r\n      } else {\r\n        this.$confirm(this.$t('tips.confirmDeleteNode'), this.$t('common.tips'), {\r\n          confirmButtonText: this.$t('common.confirm'),\r\n          cancelButtonText: this.$t('common.cancel'),\r\n          type: 'warning'\r\n        }).then(() => {\r\n          this.dept.deptIds = checked.join(',')\r\n          this.$delete(`system/dept/${this.dept.deptIds}`).then(() => {\r\n            this.$message({\r\n              message: this.$t('tips.deleteSuccess'),\r\n              type: 'success'\r\n            })\r\n            this.reset()\r\n          })\r\n        }).catch(() => {\r\n          this.$refs.deptTree.setCheckedKeys([])\r\n        })\r\n      }\r\n    },\r\n    search() {\r\n      this.$refs.deptTree.filter(this.deptName)\r\n    },\r\n    reset() {\r\n      this.initDeptTree()\r\n      this.deptName = ''\r\n      this.resetForm()\r\n    },\r\n    submit() {\r\n      this.$refs.form.validate((valid) => {\r\n        if (valid) {\r\n          this.dept.createTime = this.dept.modifyTime = null\r\n          if (this.dept.deptId) {\r\n            this.$put('system/dept', { ...this.dept }).then(() => {\r\n              this.$message({\r\n                message: this.$t('tips.updateSuccess'),\r\n                type: 'success'\r\n              })\r\n              this.reset()\r\n            })\r\n          } else {\r\n            this.$post('system/dept', { ...this.dept }).then(() => {\r\n              this.$message({\r\n                message: this.$t('tips.createSuccess'),\r\n                type: 'success'\r\n              })\r\n              this.reset()\r\n            })\r\n          }\r\n        } else {\r\n          return false\r\n        }\r\n      })\r\n    },\r\n    resetForm() {\r\n      this.$refs.form.clearValidate()\r\n      this.$refs.form.resetFields()\r\n      this.dept = this.initDept()\r\n    }\r\n  }\r\n}\r\n",null]}