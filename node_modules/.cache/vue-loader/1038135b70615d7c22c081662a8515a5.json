{"remainingRequest":"D:\\品达通用权限系统\\资料\\前端工程\\pinda-authority-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\品达通用权限系统\\资料\\前端工程\\pinda-authority-ui\\src\\views\\profile\\components\\UserCard.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\品达通用权限系统\\资料\\前端工程\\pinda-authority-ui\\src\\views\\profile\\components\\UserCard.vue","mtime":1585207882936},{"path":"D:\\品达通用权限系统\\资料\\前端工程\\pinda-authority-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\品达通用权限系统\\资料\\前端工程\\pinda-authority-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\品达通用权限系统\\资料\\前端工程\\pinda-authority-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\品达通用权限系统\\资料\\前端工程\\pinda-authority-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport PanThumb from '@/components/PanThumb'\r\nimport Avatar from './Avatar'\r\n\r\nexport default {\r\n  components: { PanThumb, Avatar },\r\n  props: {\r\n    user: {\r\n      type: Object,\r\n      default: () => {\r\n        return {}\r\n      }\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      dialogVisible: false,\r\n      socialLoginUrl: `${process.env.VUE_APP_BASE_API}/authority/social/login`,\r\n      logo: [\r\n        { img: 'gitee.png', name: 'gitee', bind: false, radius: true },\r\n        { img: 'github.png', name: 'github', bind: false, radius: true },\r\n        {\r\n          img: 'tencent_cloud.png',\r\n          name: 'tencent_cloud',\r\n          bind: false,\r\n          radius: true\r\n        },\r\n        { img: 'qq.png', name: 'qq', bind: false, radius: false },\r\n        { img: 'dingtalk.png', name: 'dingtalk', bind: false, radius: true },\r\n        { img: 'microsoft.png', name: 'microsoft', bind: false, radius: false }\r\n      ],\r\n      oauthType: '',\r\n      page: {\r\n        width: window.screen.width * 0.5,\r\n        height: window.screen.height * 0.5\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    avatar() {\r\n      if (!this.user['avatar']) {\r\n        return require(`@/assets/avatar/default.jpg`)\r\n      } else {\r\n        if (\r\n          this.user['avatar'].startsWith('http://') ||\r\n          this.user['avatar'].startsWith('https://')\r\n        ) {\r\n          return this.user['avatar']\r\n        } else {\r\n          return require(`@/assets/avatar/${this.user.avatar}`)\r\n        }\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    // this.findUserConnections()\r\n  },\r\n  destroyed() {\r\n    window.removeEventListener('message', this.resolveBindResult)\r\n  },\r\n  methods: {\r\n    openAvatar() {\r\n      this.dialogVisible = true\r\n      debugger\r\n      this.$refs.myAvatar.init()\r\n    },\r\n    changeSuccess(avatar) {\r\n      this.dialogVisible = false\r\n      this.$message({\r\n        message: this.$t('tips.updateSuccess'),\r\n        type: 'success'\r\n      })\r\n      this.user.avatar = avatar\r\n      this.$store.commit('account/setUser', this.user)\r\n    },\r\n    resolveLogo(logo) {\r\n      return require(`@/assets/logo/${logo}`)\r\n    },\r\n    findUserConnections() {\r\n      this.$get(`auth/social/connections/${this.user.username}`).then(r => {\r\n        const data = r.data.data\r\n        data.forEach(d => {\r\n          this.logo.forEach(l => {\r\n            if (l.name === d.providerName.toLowerCase()) {\r\n              l.bind = true\r\n            }\r\n          })\r\n        })\r\n      })\r\n    },\r\n    bind(name) {\r\n      this.$message({\r\n        message: '待完善',\r\n        type: 'warning'\r\n      })\r\n      console.log(name)\r\n      this.oauthType = name\r\n      // const url = `${this.socialLoginUrl}/${name}/bind`\r\n      // window.open(url, 'newWindow', `height=${this.page.height}, width=${this.page.width}, top=10%, left=10%, toolbar=no, menubar=no, scrollbars=no, resizable=no,location=no, status=no`)\r\n      // window.addEventListener('message', this.resolveBindResult, false)\r\n    },\r\n    resolveBindResult(e) {\r\n      const data = e.data.data\r\n      data.token = null\r\n      // this.$post('auth/social/bind', {\r\n      //   ...data,\r\n      //   bindUsername: this.user.username\r\n      // }).then((r) => {\r\n      //   this.logo.forEach(l => {\r\n      //     if (l.name === this.oauthType) {\r\n      //       l.bind = true\r\n      //     }\r\n      //   })\r\n      //   this.$message({\r\n      //     message: this.$t('common.bindSuccess'),\r\n      //     type: 'success'\r\n      //   })\r\n      // })\r\n    },\r\n    unbind(name) {\r\n      this.$confirm(this.$t('common.confirmUnbind'), this.$t('common.tips'), {\r\n        confirmButtonText: this.$t('common.confirm'),\r\n        cancelButtonText: this.$t('common.cancel'),\r\n        type: 'warning'\r\n      })\r\n        .then(() => {\r\n          this.$delete('auth/social/unbind', {\r\n            bindUsername: this.user.username,\r\n            oauthType: name\r\n          }).then(() => {\r\n            this.logo.forEach(l => {\r\n              if (l.name === name) {\r\n                l.bind = false\r\n              }\r\n            })\r\n            this.$message({\r\n              message: this.$t('common.unbindSuccess'),\r\n              type: 'success'\r\n            })\r\n          })\r\n        })\r\n        .catch(() => {})\r\n    }\r\n  }\r\n}\r\n",null]}