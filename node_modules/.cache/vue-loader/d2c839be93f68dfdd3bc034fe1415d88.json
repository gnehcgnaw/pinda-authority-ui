{"remainingRequest":"D:\\品达通用权限系统\\资料\\前端工程\\pinda-authority-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\品达通用权限系统\\资料\\前端工程\\pinda-authority-ui\\src\\views\\febs\\monitor\\systemlog\\Index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\品达通用权限系统\\资料\\前端工程\\pinda-authority-ui\\src\\views\\febs\\monitor\\systemlog\\Index.vue","mtime":1585207882827},{"path":"D:\\品达通用权限系统\\资料\\前端工程\\pinda-authority-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\品达通用权限系统\\资料\\前端工程\\pinda-authority-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\品达通用权限系统\\资料\\前端工程\\pinda-authority-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\品达通用权限系统\\资料\\前端工程\\pinda-authority-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport Pagination from '@/components/Pagination'\r\n\r\nexport default {\r\n  name: 'SystemLog',\r\n  components: { Pagination },\r\n  filters: {\r\n    timeFilter(time) {\r\n      if (time < 500) {\r\n        return 'success'\r\n      } else if (time < 1000) {\r\n        return ''\r\n      } else if (time < 1500) {\r\n        return 'warning'\r\n      } else {\r\n        return 'danger'\r\n      }\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      tableKey: 0,\r\n      loading: false,\r\n      list: null,\r\n      total: 0,\r\n      queryParams: {},\r\n      sort: {},\r\n      selection: [],\r\n      pagination: {\r\n        size: 10,\r\n        num: 1\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetch()\r\n  },\r\n  methods: {\r\n    onSelectChange(selection) {\r\n      this.selection = selection\r\n    },\r\n    exportExcel() {\r\n      this.$download(\r\n        'system/log/excel',\r\n        {\r\n          pageSize: this.pagination.size,\r\n          pageNum: this.pagination.num,\r\n          ...this.queryParams\r\n        },\r\n        `log_${new Date().getTime()}.xlsx`\r\n      )\r\n    },\r\n    fetch(params = {}) {\r\n      params.pageSize = this.pagination.size\r\n      params.pageNum = this.pagination.num\r\n      if (this.queryParams.timeRange) {\r\n        params.createTimeFrom = this.queryParams.timeRange[0]\r\n        params.createTimeTo = this.queryParams.timeRange[1]\r\n      }\r\n      this.loading = true\r\n      this.$get('system/log', {\r\n        ...params\r\n      }).then(r => {\r\n        const data = r.data.data\r\n        this.total = data.total\r\n        this.list = data.rows\r\n        this.loading = false\r\n      })\r\n    },\r\n    singleDelete(row) {\r\n      this.$refs.table.toggleRowSelection(row, true)\r\n      this.batchDelete()\r\n    },\r\n    batchDelete() {\r\n      if (!this.selection.length) {\r\n        this.$message({\r\n          message: this.$t('tips.noDataSelected'),\r\n          type: 'warning'\r\n        })\r\n        return\r\n      }\r\n      this.$confirm(this.$t('tips.confirmDelete'), this.$t('common.tips'), {\r\n        confirmButtonText: this.$t('common.confirm'),\r\n        cancelButtonText: this.$t('common.cancel'),\r\n        type: 'warning'\r\n      })\r\n        .then(() => {\r\n          const logIds = []\r\n          this.selection.forEach(l => {\r\n            logIds.push(l.id)\r\n          })\r\n          this.delete(logIds)\r\n        })\r\n        .catch(() => {\r\n          this.clearSelections()\r\n        })\r\n    },\r\n    clearSelections() {\r\n      this.$refs.table.clearSelection()\r\n    },\r\n    delete(logIds) {\r\n      this.$delete(`system/log/${logIds}`).then(() => {\r\n        this.$message({\r\n          message: this.$t('tips.deleteSuccess'),\r\n          type: 'success'\r\n        })\r\n        this.search()\r\n      })\r\n    },\r\n    search() {\r\n      this.fetch({\r\n        ...this.queryParams,\r\n        ...this.sort\r\n      })\r\n    },\r\n    reset() {\r\n      this.queryParams = {}\r\n      this.sort = {}\r\n      this.$refs.table.clearSort()\r\n      this.$refs.table.clearFilter()\r\n      this.search()\r\n    },\r\n    transTime(time) {\r\n      return `${time} ms`\r\n    },\r\n    sortChange(val) {\r\n      this.sort.field = val.prop\r\n      this.sort.order = val.order\r\n      this.search()\r\n    }\r\n  }\r\n}\r\n",null]}