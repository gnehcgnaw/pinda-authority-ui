{"remainingRequest":"D:\\品达通用权限系统\\资料\\前端工程\\pinda-authority-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\品达通用权限系统\\资料\\前端工程\\pinda-authority-ui\\src\\views\\pinda\\user\\org\\Index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\品达通用权限系统\\资料\\前端工程\\pinda-authority-ui\\src\\views\\pinda\\user\\org\\Index.vue","mtime":1585207882919},{"path":"D:\\品达通用权限系统\\资料\\前端工程\\pinda-authority-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\品达通用权限系统\\资料\\前端工程\\pinda-authority-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\品达通用权限系统\\资料\\前端工程\\pinda-authority-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\品达通用权限系统\\资料\\前端工程\\pinda-authority-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport orgApi from '@/api/Org.js'\r\nexport default {\r\n  name: 'OrgManager',\r\n  data() {\r\n    return {\r\n      name: '',\r\n      orgTree: [],\r\n      org: this.initOrg(),\r\n      rules: {\r\n        name: [\r\n          {\r\n            required: true,\r\n            message: this.$t('rules.require'),\r\n            trigger: 'blur'\r\n          },\r\n          {\r\n            min: 1,\r\n            max: 255,\r\n            message: this.$t('rules.range3to10'),\r\n            trigger: 'blur'\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.initOrgTree()\r\n  },\r\n  methods: {\r\n    initOrg() {\r\n      return {\r\n        id: '',\r\n        abbreviation: '',\r\n        name: '',\r\n        parentId: 0,\r\n        status: true,\r\n        describe: '',\r\n        sortValue: 0\r\n      }\r\n    },\r\n    initOrgTree() {\r\n      orgApi.allTree({}).then(response => {\r\n        const res = response.data\r\n        this.orgTree = res.data\r\n      })\r\n    },\r\n    exportExcel() {\r\n      this.$message({\r\n        message: '待完善',\r\n        type: 'warning'\r\n      })\r\n      // this.$download('system/org/excel', {\r\n      //   name: this.name\r\n      // }, `org_${new Date().getTime()}.xlsx`)\r\n    },\r\n    handleNumChange(val) {\r\n      this.org.sortValue = val\r\n    },\r\n    filterNode(value, data) {\r\n      if (!value) return true\r\n      return data.label.indexOf(value) !== -1\r\n    },\r\n    nodeClick(data) {\r\n      this.org = { ...data }\r\n      this.$refs.form.clearValidate()\r\n    },\r\n    add() {\r\n      this.resetForm()\r\n      const checked = this.$refs.orgTree.getCheckedKeys()\r\n      if (checked.length > 1) {\r\n        this.$message({\r\n          message: this.$t('tips.onlyChooseOne'),\r\n          type: 'warning'\r\n        })\r\n      } else if (checked.length > 0) {\r\n        this.org.parentId = checked[0]\r\n      } else {\r\n        this.org.parentId = 0\r\n      }\r\n    },\r\n    deleteOrg() {\r\n      const checked = this.$refs.orgTree.getCheckedKeys()\r\n      if (checked.length === 0) {\r\n        this.$message({\r\n          message: this.$t('tips.noNodeSelected'),\r\n          type: 'warning'\r\n        })\r\n      } else {\r\n        this.$confirm(\r\n          this.$t('tips.confirmDeleteNode'),\r\n          this.$t('common.tips'),\r\n          {\r\n            confirmButtonText: this.$t('common.confirm'),\r\n            cancelButtonText: this.$t('common.cancel'),\r\n            type: 'warning'\r\n          }\r\n        )\r\n          .then(() => {\r\n            orgApi.delete({ ids: checked }).then(response => {\r\n              const res = response.data\r\n              if (res.isSuccess) {\r\n                this.$message({\r\n                  message: this.$t('tips.deleteSuccess'),\r\n                  type: 'success'\r\n                })\r\n              }\r\n              this.reset()\r\n            })\r\n          })\r\n          .catch(() => {\r\n            this.$refs.orgTree.setCheckedKeys([])\r\n          })\r\n      }\r\n    },\r\n    search() {\r\n      this.$refs.orgTree.filter(this.name)\r\n    },\r\n    reset() {\r\n      this.initOrgTree()\r\n      this.name = ''\r\n      this.resetForm()\r\n    },\r\n    submit() {\r\n      this.$refs.form.validate(valid => {\r\n        if (valid) {\r\n          if (this.org.id) {\r\n            this.update()\r\n          } else {\r\n            this.save()\r\n          }\r\n        } else {\r\n          return false\r\n        }\r\n      })\r\n    },\r\n    save() {\r\n      orgApi.save({ ...this.org }).then(response => {\r\n        const res = response.data\r\n        if (res.isSuccess) {\r\n          this.$message({\r\n            message: this.$t('tips.createSuccess'),\r\n            type: 'success'\r\n          })\r\n        }\r\n\r\n        this.reset()\r\n      })\r\n    },\r\n    update() {\r\n      orgApi.update({ ...this.org }).then(response => {\r\n        const res = response.data\r\n        if (res.isSuccess) {\r\n          this.$message({\r\n            message: this.$t('tips.updateSuccess'),\r\n            type: 'success'\r\n          })\r\n        }\r\n        this.reset()\r\n      })\r\n    },\r\n    resetForm() {\r\n      this.$refs.form.clearValidate()\r\n      this.$refs.form.resetFields()\r\n      this.org = this.initOrg()\r\n    }\r\n  }\r\n}\r\n",null]}