{"remainingRequest":"D:\\品达通用权限系统\\资料\\前端工程\\pinda-authority-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\品达通用权限系统\\资料\\前端工程\\pinda-authority-ui\\src\\views\\pinda\\file\\attachment\\Edit.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\品达通用权限系统\\资料\\前端工程\\pinda-authority-ui\\src\\views\\pinda\\file\\attachment\\Edit.vue","mtime":1585207882902},{"path":"D:\\品达通用权限系统\\资料\\前端工程\\pinda-authority-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\品达通用权限系统\\资料\\前端工程\\pinda-authority-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\品达通用权限系统\\资料\\前端工程\\pinda-authority-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\品达通用权限系统\\资料\\前端工程\\pinda-authority-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport elDragDialog from '@/directive/el-drag-dialog'\r\nimport fileUpload from '@/components/pinda/fileUpload'\r\n\r\nexport default {\r\n  name: 'AttachmentEdit',\r\n  directives: { elDragDialog, fileUpload },\r\n  components: { fileUpload },\r\n  props: {\r\n    dialogVisible: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    type: {\r\n      type: String,\r\n      default: 'add'\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      accept: 'image/jpeg, image/gif, image/png',\r\n      attachment: this.initAttachment(),\r\n      screenWidth: 0,\r\n      width: this.initWidth(),\r\n      fileLength: 0,\r\n      disabled: false,\r\n      rules: {\r\n        bizType: [\r\n          {\r\n            required: true,\r\n            message: this.$t('rules.require'),\r\n            trigger: 'blur'\r\n          },\r\n          {\r\n            min: 0,\r\n            max: 255,\r\n            message: this.$t('rules.range0to255'),\r\n            trigger: 'blur'\r\n          }\r\n        ],\r\n        bizId: {\r\n          min: 0,\r\n          max: 255,\r\n          message: this.$t('rules.range0to255'),\r\n          trigger: 'blur'\r\n        },\r\n        fileLength: {\r\n          required: true,\r\n          trigger: 'change',\r\n          validator: (rule, value, callback) => {\r\n            const vm = this\r\n            if (vm.fileLength === 0) {\r\n              callback(new Error('请上传文件'))\r\n            } else if (vm.fileLength > 5) {\r\n              callback(new Error('一次性只能上传5个文件'))\r\n            } else {\r\n              callback()\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    isVisible: {\r\n      get() {\r\n        return this.dialogVisible\r\n      },\r\n      set() {\r\n        this.close()\r\n        this.reset()\r\n      }\r\n    },\r\n    title() {\r\n      return this.$t('common.upload')\r\n    }\r\n  },\r\n  watch: {},\r\n  mounted() {\r\n    window.onresize = () => {\r\n      return (() => {\r\n        this.width = this.initWidth()\r\n      })()\r\n    }\r\n  },\r\n  methods: {\r\n    initAttachment() {\r\n      return {\r\n        id: '',\r\n        bizId: '',\r\n        bizType: '',\r\n        file: null,\r\n        isSingle: false\r\n      }\r\n    },\r\n    handleDrag() {\r\n      console.log(`我被拖动了`)\r\n    },\r\n    // 附件长度校验\r\n    fileLengthVaild(data) {\r\n      const vm = this\r\n      vm.fileLength = data || 0\r\n    },\r\n    initWidth() {\r\n      this.screenWidth = document.body.clientWidth\r\n      if (this.screenWidth < 991) {\r\n        return '90%'\r\n      } else if (this.screenWidth < 1400) {\r\n        return '45%'\r\n      } else {\r\n        return '800px'\r\n      }\r\n    },\r\n    setAttachment(val) {\r\n      const vm = this\r\n      if (val) {\r\n        vm.attachment = { ...val }\r\n      }\r\n    },\r\n    close() {\r\n      this.$emit('close')\r\n    },\r\n    reset() {\r\n      // 先清除校验，再清除表单，不然有奇怪的bug\r\n      this.$refs.form.clearValidate()\r\n      this.$refs.form.resetFields()\r\n      this.attachment = this.initAttachment()\r\n      this.$refs.fileRef.init({\r\n        id: '',\r\n        bizId: '',\r\n        bizType: ''\r\n      })\r\n    },\r\n    submitForm() {\r\n      const vm = this\r\n      this.$refs.form.validate(valid => {\r\n        if (valid) {\r\n          vm.editSubmit()\r\n        } else {\r\n          return false\r\n        }\r\n      })\r\n    },\r\n    editSubmit() {\r\n      const vm = this\r\n      vm.disabled = true\r\n      vm.$refs.fileRef.submitFile(\r\n        this.attachment.id,\r\n        this.attachment.bizId,\r\n        this.attachment.bizType\r\n      )\r\n    },\r\n    setIdAndSubmit(isUploadCompleted) {\r\n      const vm = this\r\n      if (isUploadCompleted) {\r\n        vm.disabled = false\r\n        vm.isVisible = false\r\n        vm.$message({\r\n          message: vm.$t('tips.createSuccess'),\r\n          type: 'success'\r\n        })\r\n        vm.$emit('success')\r\n      }\r\n    }\r\n  }\r\n}\r\n",null]}