{"remainingRequest":"D:\\品达通用权限系统\\资料\\前端工程\\pinda-authority-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\品达通用权限系统\\资料\\前端工程\\pinda-authority-ui\\src\\views\\dashboard\\index copy.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\品达通用权限系统\\资料\\前端工程\\pinda-authority-ui\\src\\views\\dashboard\\index copy.vue","mtime":1585207882807},{"path":"D:\\品达通用权限系统\\资料\\前端工程\\pinda-authority-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\品达通用权限系统\\资料\\前端工程\\pinda-authority-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\品达通用权限系统\\资料\\前端工程\\pinda-authority-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\品达通用权限系统\\资料\\前端工程\\pinda-authority-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport echarts from 'echarts'\r\nimport { parseTime } from '@/utils'\r\nimport countTo from 'vue-count-to'\r\nimport resize from '@/components/Charts/mixins/resize'\r\nimport { simplePie, simpleBar } from '@/utils/chartsOption'\r\nimport dashboardApi from '@/api/Dashboard.js'\r\n\r\nexport default {\r\n  name: 'Dashboard',\r\n  components: { countTo },\r\n  filters: {\r\n    userAvatarFilter(name) {\r\n      return name.charAt(0)\r\n    }\r\n  },\r\n  mixins: [resize],\r\n  data() {\r\n    return {\r\n      welcomeMessage: '',\r\n      todayIp: 0,\r\n      todayVisit: 0,\r\n      totalVisit: 0,\r\n      chart: null,\r\n      chartOption: simpleBar(this.$t('common.visitTitle') + '\\n'),\r\n      browserCountOption: simplePie('访问用户浏览器'),\r\n      operatingSystemCountOption: simplePie('访问用户操作系统'),\r\n      browserCountChart: null,\r\n      operatingSystemCountChart: null,\r\n      projects: [\r\n        {\r\n          name: 'SpringBoot',\r\n          des: 'Spring Boot 2.1.2',\r\n          avatar: 'SB'\r\n        },\r\n        {\r\n          name: 'SpringCloud',\r\n          des: 'Spring Cloud Greenwich.RELEASE',\r\n          avatar: 'SC'\r\n        },\r\n        {\r\n          name: 'Spring Cloud alibaba',\r\n          des: 'SpringCloudAlibaba2.1.0.RELEASE & nacos & seata & Sentinel',\r\n          avatar: 'SCA'\r\n        },\r\n        {\r\n          name: 'Mybatis-Plus',\r\n          des: 'Mybatis-plus 3.2.0：Mybatis 增强组件',\r\n          avatar: 'MP'\r\n        },\r\n        {\r\n          name: 'J2cache',\r\n          des: 'J2cache2.7.8: 二级缓存框架',\r\n          avatar: 'J'\r\n        },\r\n        {\r\n          name: '文件存储API',\r\n          des: '封装文件接口，实现本地存储、阿里云、FastDFS存储的配置化',\r\n          avatar: 'F'\r\n        },\r\n        {\r\n          name: '监控',\r\n          des:\r\n            '集成SpringBootAdmin、Zipkin、Redis、Mysql、定时任务等监控，对系统进行全方位监控护航',\r\n          avatar: 'M'\r\n        },\r\n        {\r\n          name: '容器技术',\r\n          des: '虚拟化容器技术，让迁移、部署更加方便快捷',\r\n          avatar: 'C'\r\n        }\r\n      ]\r\n    }\r\n  },\r\n  computed: {\r\n    user() {\r\n      return this.$store.state.account.user\r\n    },\r\n    avatar() {\r\n      if (!this.user['avatar']) {\r\n        return require(`@/assets/avatar/default.jpg`)\r\n      } else {\r\n        if (\r\n          this.user['avatar'].startsWith('http://') ||\r\n          this.user['avatar'].startsWith('https://')\r\n        ) {\r\n          return this.user['avatar']\r\n        } else {\r\n          return require(`@/assets/avatar/${this.user.avatar}`)\r\n        }\r\n      }\r\n      // return this.$store.state.account.user.avatar\r\n    }\r\n  },\r\n  mounted() {\r\n    this.welcomeMessage = this.welcome()\r\n    this.initIndexData()\r\n  },\r\n  methods: {\r\n    welcome() {\r\n      const date = new Date()\r\n      const hour = date.getHours()\r\n      const time =\r\n        hour < 6\r\n          ? this.$t('common.goodMorning')\r\n          : hour <= 11\r\n          ? this.$t('common.goodMorning')\r\n          : hour <= 13\r\n          ? this.$t('common.goodAfternoon')\r\n          : hour <= 18\r\n          ? this.$t('common.goodAfternoon')\r\n          : this.$t('common.goodEvening')\r\n\r\n      const welcomeArr = Array.from({ length: 10 }, (v, i) =>\r\n        this.$t('common.randomMessage.' + i)\r\n      )\r\n      const index = Math.floor(Math.random() * welcomeArr.length)\r\n      return `${time}, ${this.user.name}, ${welcomeArr[index]}`\r\n    },\r\n    initIndexData: function() {\r\n      dashboardApi.getVisitList({}).then(response => {\r\n        const res = response.data\r\n\r\n        const data = res.data\r\n        this.todayIp = Number(data.todayIp)\r\n        this.totalVisit = Number(data.totalVisitCount)\r\n        this.todayVisit = Number(data.todayVisitCount)\r\n\r\n        this.tenDaysData(data)\r\n        this.browserCount(data.browserCount)\r\n        this.operatingSystemCount(data.operatingSystemCount)\r\n      })\r\n    },\r\n    tenDaysData(data) {\r\n      const tenVisitCount = []\r\n      const dateArr = []\r\n      const tenUserVisitCount = []\r\n\r\n      for (let i = 9; i >= 0; i--) {\r\n        const time = parseTime(\r\n          new Date(new Date().getTime() - 24 * 60 * 60 * 1000 * i),\r\n          '{y}-{m}-{d}'\r\n        )\r\n        let contain = false\r\n        for (const o of data.lastTenVisitCount) {\r\n          if (o.login_date === time) {\r\n            contain = true\r\n            tenVisitCount.push(o.count)\r\n            break\r\n          }\r\n        }\r\n        if (!contain) {\r\n          tenVisitCount.push(0)\r\n        }\r\n\r\n        let userContain = false\r\n        for (const o of data.lastTenUserVisitCount) {\r\n          if (o.login_date === time) {\r\n            userContain = true\r\n            tenUserVisitCount.push(o.count)\r\n            break\r\n          }\r\n        }\r\n        if (!userContain) {\r\n          tenUserVisitCount.push(0)\r\n        }\r\n        dateArr.push(time)\r\n      }\r\n\r\n      this.chart = echarts.init(document.getElementById('visit-count-chart'))\r\n      this.chartOption.legend.data = [\r\n        this.$t('common.you'),\r\n        this.$t('common.total')\r\n      ]\r\n      this.chartOption.xAxis.data = dateArr\r\n      this.chartOption.series.push({\r\n        name: this.$t('common.you'),\r\n        type: 'bar',\r\n        barWidth: '25%',\r\n        color: '#FD7270',\r\n        data: tenUserVisitCount\r\n      })\r\n      this.chartOption.series.push({\r\n        name: this.$t('common.total'),\r\n        type: 'bar',\r\n        barWidth: '25%',\r\n        color: '#5D7DF2',\r\n        data: tenVisitCount\r\n      })\r\n      this.chart.setOption(this.chartOption)\r\n    },\r\n    browserCount(data) {\r\n      if (!data) {\r\n        return\r\n      }\r\n      const legend_data = []\r\n      const series_data = []\r\n      data.forEach(item => {\r\n        const browser = item.browser || '未知'\r\n        series_data.push({ value: item.count, name: browser })\r\n        legend_data.push(browser)\r\n      })\r\n\r\n      this.browserCountOption.series[0].data = series_data\r\n      this.browserCountOption.legend.data = legend_data\r\n\r\n      this.browserCountChart = echarts.init(\r\n        document.getElementById('browser-count-chart'),\r\n        'westeros'\r\n      )\r\n      this.browserCountChart.setOption(this.browserCountOption)\r\n    },\r\n    operatingSystemCount(data) {\r\n      if (!data) {\r\n        return\r\n      }\r\n      const legend_data = []\r\n      const series_data = []\r\n      data.forEach(item => {\r\n        const browser = item.operating_system || '未知'\r\n        series_data.push({ value: item.count, name: browser })\r\n        legend_data.push(browser)\r\n      })\r\n\r\n      this.operatingSystemCountOption.series[0].data = series_data\r\n      this.operatingSystemCountOption.legend.data = legend_data\r\n\r\n      this.browserCountChart = echarts.init(\r\n        document.getElementById('operating-system-count-chart'),\r\n        'westeros'\r\n      )\r\n      this.browserCountChart.setOption(this.operatingSystemCountOption)\r\n    }\r\n  }\r\n}\r\n",null]}