{"remainingRequest":"D:\\品达通用权限系统\\资料\\前端工程\\pinda-authority-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\品达通用权限系统\\资料\\前端工程\\pinda-authority-ui\\src\\views\\pinda\\auth\\role\\UserRole.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\品达通用权限系统\\资料\\前端工程\\pinda-authority-ui\\src\\views\\pinda\\auth\\role\\UserRole.vue","mtime":1585207882874},{"path":"D:\\品达通用权限系统\\资料\\前端工程\\pinda-authority-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\品达通用权限系统\\资料\\前端工程\\pinda-authority-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\品达通用权限系统\\资料\\前端工程\\pinda-authority-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\品达通用权限系统\\资料\\前端工程\\pinda-authority-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport roleApi from '@/api/Role.js'\r\nimport userApi from '@/api/User.js'\r\n\r\nexport default {\r\n  name: 'UserRoleEdit',\r\n  components: {},\r\n  props: {\r\n    dialogVisible: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      userRole: this.initUserRole(),\r\n      screenWidth: 0,\r\n      width: this.initWidth(),\r\n      userList: [],\r\n      userIdList: [],\r\n      disabled: false,\r\n      rules: {},\r\n      renderFunc(h, option) {\r\n        // return <span title='option.account - {option.name}'>{option.account} - {option.name}</span>\r\n        return h(\r\n          'span',\r\n          {\r\n            attrs: {\r\n              title: option.account + ' - ' + option.name\r\n            }\r\n          },\r\n          [option.account, ' - ', option.name]\r\n        )\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    isVisible: {\r\n      get() {\r\n        return this.dialogVisible\r\n      },\r\n      set() {\r\n        this.close()\r\n        this.reset()\r\n      }\r\n    },\r\n    title() {\r\n      return '分配角色成员'\r\n    }\r\n  },\r\n  watch: {},\r\n  mounted() {\r\n    this.initUserList()\r\n    window.onresize = () => {\r\n      return (() => {\r\n        this.width = this.initWidth()\r\n      })()\r\n    }\r\n  },\r\n  methods: {\r\n    initUserRole() {\r\n      return {\r\n        roleId: '',\r\n        userIdList: []\r\n      }\r\n    },\r\n    initWidth() {\r\n      this.screenWidth = document.body.clientWidth\r\n      if (this.screenWidth < 991) {\r\n        return '90%'\r\n      } else if (this.screenWidth < 1400) {\r\n        return '45%'\r\n      } else {\r\n        return '800px'\r\n      }\r\n    },\r\n    initUserList() {\r\n      userApi\r\n        .page({ current: 1, size: 100000, status: true })\r\n        .then(response => {\r\n          const res = response.data\r\n\r\n          this.userList = res.data.records\r\n        })\r\n        .catch(() => {\r\n          this.$message({\r\n            message: this.$t('tips.getDataFail'),\r\n            type: 'error'\r\n          })\r\n        })\r\n    },\r\n    setUserRole(val) {\r\n      const vm = this\r\n      vm.userRole.roleId = val.id\r\n      // vm.disabled = val.readonly\r\n      roleApi.findUserIdByRoleId(val.id).then(response => {\r\n        const res = response.data\r\n        vm.userRole.userIdList = res.data\r\n      })\r\n    },\r\n    close() {\r\n      this.$emit('close')\r\n    },\r\n    reset() {\r\n      // 先清除校验，再清除表单，不然有奇怪的bug\r\n      this.$refs.form.clearValidate()\r\n      this.$refs.form.resetFields()\r\n      this.userRole = this.initUserRole()\r\n      this.disabled = false\r\n    },\r\n    submitForm() {\r\n      const vm = this\r\n      this.$refs.form.validate(valid => {\r\n        if (valid) {\r\n          vm.editSubmit()\r\n        } else {\r\n          return false\r\n        }\r\n      })\r\n    },\r\n    editSubmit() {\r\n      const vm = this\r\n      console.log(this.userRole)\r\n\r\n      roleApi.saveUserRole(this.userRole).then(response => {\r\n        const res = response.data\r\n        if (res.isSuccess) {\r\n          vm.isVisible = false\r\n          vm.$message({\r\n            message: vm.$t('tips.createSuccess'),\r\n            type: 'success'\r\n          })\r\n          vm.$emit('success')\r\n        }\r\n      })\r\n    },\r\n    filterMethod(query, item) {\r\n      return item.name.indexOf(query) > -1 || item.account.indexOf(query) > -1\r\n    }\r\n  }\r\n}\r\n",null]}