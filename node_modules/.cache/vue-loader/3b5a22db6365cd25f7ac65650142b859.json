{"remainingRequest":"D:\\projects\\beike\\pinda-authority-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\projects\\beike\\pinda-authority-ui\\src\\views\\pinda\\sms\\template\\Edit.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\projects\\beike\\pinda-authority-ui\\src\\views\\pinda\\sms\\template\\Edit.vue","mtime":1585207882915},{"path":"D:\\projects\\beike\\pinda-authority-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\projects\\beike\\pinda-authority-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\projects\\beike\\pinda-authority-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\projects\\beike\\pinda-authority-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport smsTemplateApi from '@/api/SmsTemplate.js'\r\n\r\nexport default {\r\n  name: 'SmsTemplateEdit',\r\n  components: {},\r\n  props: {\r\n    dialogVisible: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    type: {\r\n      type: String,\r\n      default: 'add'\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      smsTemplate: this.initSmsTemplate(),\r\n      screenWidth: 0,\r\n      width: this.initWidth(),\r\n      rules: {\r\n        providerType: [\r\n          {\r\n            required: true,\r\n            message: this.$t('rules.require'),\r\n            trigger: 'change'\r\n          }\r\n        ],\r\n        appId: [\r\n          {\r\n            required: true,\r\n            message: this.$t('rules.require'),\r\n            trigger: 'blur'\r\n          },\r\n          {\r\n            min: 1,\r\n            max: 255,\r\n            message: this.$t('rules.range4to10'),\r\n            trigger: 'blur'\r\n          }\r\n        ],\r\n        appSecret: [\r\n          {\r\n            required: true,\r\n            message: this.$t('rules.require'),\r\n            trigger: 'blur'\r\n          },\r\n          {\r\n            min: 1,\r\n            max: 255,\r\n            message: this.$t('rules.range4to10'),\r\n            trigger: 'blur'\r\n          }\r\n        ],\r\n        customCode: [\r\n          {\r\n            min: 0,\r\n            max: 20,\r\n            message: this.$t('rules.range4to10'),\r\n            trigger: 'blur'\r\n          },\r\n          {\r\n            validator: (rule, value, callback) => {\r\n              if (this.type === 'add' && value.trim() !== '') {\r\n                smsTemplateApi.check(value).then(response => {\r\n                  debugger\r\n                  const res = response.data\r\n                  if (res.data) {\r\n                    callback('自定义编码重复')\r\n                  } else {\r\n                    callback()\r\n                  }\r\n                })\r\n              } else {\r\n                callback()\r\n              }\r\n            },\r\n            trigger: 'blur'\r\n          }\r\n        ],\r\n        content: {\r\n          required: true,\r\n          message: this.$t('rules.require'),\r\n          trigger: 'blur'\r\n        },\r\n        templateCode: {\r\n          required: true,\r\n          message: this.$t('rules.require'),\r\n          trigger: 'blur'\r\n        }\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    isVisible: {\r\n      get() {\r\n        return this.dialogVisible\r\n      },\r\n      set() {\r\n        this.close()\r\n        this.reset()\r\n      }\r\n    },\r\n    title() {\r\n      return this.type === 'add'\r\n        ? this.$t('common.add')\r\n        : this.$t('common.edit')\r\n    },\r\n    enums() {\r\n      return this.$store.state.common.enums\r\n    }\r\n  },\r\n  watch: {},\r\n  mounted() {\r\n    window.onresize = () => {\r\n      return (() => {\r\n        this.width = this.initWidth()\r\n      })()\r\n    }\r\n  },\r\n  methods: {\r\n    initSmsTemplate() {\r\n      return {\r\n        id: '',\r\n        providerType: { code: '' },\r\n        appId: '',\r\n        appSecret: '',\r\n        url: '',\r\n        customCode: '',\r\n        name: '',\r\n        content: '',\r\n        templateParams: '',\r\n        templateCode: '',\r\n        signName: '',\r\n        templateDescribe: ''\r\n      }\r\n    },\r\n    initWidth() {\r\n      this.screenWidth = document.body.clientWidth\r\n      if (this.screenWidth < 991) {\r\n        return '90%'\r\n      } else if (this.screenWidth < 1400) {\r\n        return '45%'\r\n      } else {\r\n        return '800px'\r\n      }\r\n    },\r\n    loadListOptions({ callback }) {\r\n      callback()\r\n    },\r\n    setSmsTemplate(val) {\r\n      const vm = this\r\n      if (val) {\r\n        vm.smsTemplate = { ...val }\r\n      }\r\n    },\r\n    close() {\r\n      this.$emit('close')\r\n    },\r\n    reset() {\r\n      // 先清除校验，再清除表单，不然有奇怪的bug\r\n      this.$refs.form.clearValidate()\r\n      this.$refs.form.resetFields()\r\n      this.smsTemplate = this.initSmsTemplate()\r\n    },\r\n    submitForm() {\r\n      const vm = this\r\n      this.$refs.form.validate(valid => {\r\n        if (valid) {\r\n          vm.editSubmit()\r\n        } else {\r\n          return false\r\n        }\r\n      })\r\n    },\r\n    editSubmit() {\r\n      const vm = this\r\n      if (vm.type === 'add') {\r\n        vm.save()\r\n      } else {\r\n        vm.update()\r\n      }\r\n    },\r\n    save() {\r\n      const vm = this\r\n      smsTemplateApi.save(this.smsTemplate).then(response => {\r\n        const res = response.data\r\n        if (res.isSuccess) {\r\n          vm.isVisible = false\r\n          vm.$message({\r\n            message: vm.$t('tips.createSuccess'),\r\n            type: 'success'\r\n          })\r\n          vm.$emit('success')\r\n        }\r\n      })\r\n    },\r\n    update() {\r\n      smsTemplateApi.update(this.smsTemplate).then(response => {\r\n        const res = response.data\r\n        if (res.isSuccess) {\r\n          this.isVisible = false\r\n          this.$message({\r\n            message: this.$t('tips.updateSuccess'),\r\n            type: 'success'\r\n          })\r\n          this.$emit('success')\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n",null]}